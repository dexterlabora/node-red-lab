[{"id":"1f7e959f.0bf9fa","type":"tab","label":"Meraki CMX Basic"},{"id":"669f5cc3.759de4","type":"tab","label":"Meraki CMX Map"},{"id":"6a68a446.ef7fdc","type":"tab","label":"Meraki API Workshop - mini lab setup"},{"id":"17ab7b4c.f6d865","type":"tab","label":"Cisco Spark"},{"id":"86c1f8e1.623368","type":"tab","label":"Meraki API Sandbox"},{"id":"4549e9a6.7a7c28","type":"tab","label":"Post Test"},{"id":"83680324.e61dc","type":"tab","label":"CMX Dashboard Spark"},{"id":"40be8841.72e518","type":"tab","label":"CMX native"},{"id":"3d8d031b.2dbf6c","type":"tab","label":"Flow 1"},{"id":"ac437911.0eac88","type":"tab","label":"CMX Map Websockets"},{"id":"8b55ff38.360ad","type":"meraki-cmx-settings","z":"1f7e959f.0bf9fa","name":"Cityzenbots Paris"},{"id":"5ac6f566.6b4fec","type":"mongodb2","z":"669f5cc3.759de4","uri":"mongodb://localhost:27017/test","name":"test","options":"","parallelism":"-1"},{"id":"e9cd24a5.ac2b78","type":"Spark Authentication","z":"","name":"Cguynn"},{"id":"f9192447.dc2f58","type":"meraki-cmx-settings","z":"","name":"dexter lab home"},{"id":"c13ff9e7.c46968","type":"ui_group","z":"","name":"Dashboard","tab":"b353beb3.1f5","disp":true,"width":"6"},{"id":"b353beb3.1f5","type":"ui_tab","z":"","name":"Home","icon":"dashboard"},{"id":"4946ad25.8d4154","type":"ui_tab","z":"","name":"Settings","icon":"dashboard"},{"id":"b10ad37f.42f37","type":"ui_group","z":"","name":"Results","tab":"b353beb3.1f5","disp":true,"width":"6"},{"id":"307b3b6d.4982e4","type":"ui_group","z":"","name":"Commands","tab":"b353beb3.1f5","disp":true,"width":"6"},{"id":"6fd45893.8b5ef8","type":"ui_group","z":"","name":"Log Live2","tab":"d5fdac5.dc64f5","order":2,"disp":true,"width":"12"},{"id":"ceb8883d.cfdd58","type":"ui_group","z":"","name":"Devices","tab":"b353beb3.1f5","disp":true,"width":"6"},{"id":"d949eee9.84d98","type":"ui_group","z":"","name":"Registration","tab":"eaa1b1fd.361ac","order":1,"disp":true,"width":"6"},{"id":"eaa1b1fd.361ac","type":"ui_tab","z":"","name":"API Workshop","icon":"dashboard","order":4},{"id":"bab3ac59.54943","type":"ui_tab","z":"","name":"Success","icon":"dashboard","order":5},{"id":"771f8ab0.2dbef4","type":"ui_group","z":"","name":"Results","tab":"bab3ac59.54943","order":1,"disp":true,"width":"6"},{"id":"778f7d52.be47a4","type":"mongodb","z":"","hostname":"127.0.0.1","port":"27017","db":"test","name":""},{"id":"a9dc49b4.0684f8","type":"mongodb2","z":"","uri":"mongodb://localhost:27017/test","name":"localhost","options":"","parallelism":"-1"},{"id":"7f0dc219.b46b0c","type":"mongodb","z":"","hostname":"127.0.0.1","port":"27017","db":"test","name":""},{"id":"a8438bf.8f8c878","type":"mongodb2","z":"","uri":"mongodb://localhost:27017/test","name":"localhost","options":"","parallelism":"-1"},{"id":"7336df10.f397e","type":"meraki-cmx-settings","z":"83680324.e61dc","name":""},{"id":"bd468de.48f6a7","type":"meraki-cmx-settings","z":"83680324.e61dc","name":"Meraki CMX"},{"id":"2169c481.cdc6dc","type":"Spark Authentication","z":"83680324.e61dc","name":"CMX Bot"},{"id":"6b24c060.f9918","type":"mongodb","hostname":"127.0.0.1","port":"27017","db":"test","name":""},{"id":"ec44fce8.ad561","type":"websocket-listener","path":"/ws/location","wholemsg":"false"},{"id":"74b4fc43.d470b4","type":"websocket-listener","path":"/ws/stations","wholemsg":"false"},{"id":"289acfe7.2779d","type":"switch","z":"1f7e959f.0bf9fa","name":"Search Clients","property":"payload","propertyType":"msg","rules":[{"t":"cont","v":"Apple","vt":"str"},{"t":"cont","v":"00:26:ab:b8:a9:a5","vt":"str"}],"checkall":"true","outputs":2,"x":147,"y":374,"wires":[["f2429625.653fe8"],["e9b25dc4.01bf5"]]},{"id":"2823b917.a5d816","type":"debug","z":"1f7e959f.0bf9fa","name":"Apple Device Found!","active":true,"console":"false","complete":"payload","x":627,"y":374,"wires":[]},{"id":"f2429625.653fe8","type":"function","z":"1f7e959f.0bf9fa","name":"Apple device found!","func":"msg.payload = \"Apple device found!\"\nreturn msg;","outputs":1,"noerr":0,"x":367,"y":374,"wires":[["2823b917.a5d816"]]},{"id":"e9b25dc4.01bf5","type":"trigger","z":"1f7e959f.0bf9fa","op1":"Welcome Back!","op2":"We miss you :(","op1type":"str","op2type":"str","duration":"5","extend":true,"units":"min","reset":"","name":"Welcome Back / We Miss You","x":337,"y":434,"wires":[["8278db0a.c62df8"]]},{"id":"8278db0a.c62df8","type":"debug","z":"1f7e959f.0bf9fa","name":"CMX Message","active":true,"console":"false","complete":"payload","x":647,"y":434,"wires":[]},{"id":"93224605.2c6c18","type":"inject","z":"1f7e959f.0bf9fa","name":"View Logs","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":107,"y":914,"wires":[["fce41a76.5ab1e8"]]},{"id":"31d513b7.c6ed0c","type":"debug","z":"1f7e959f.0bf9fa","name":"","active":true,"console":"false","complete":"false","x":637,"y":914,"wires":[]},{"id":"15a92edc.c165a1","type":"debug","z":"1f7e959f.0bf9fa","name":"CMX Validator","active":true,"console":"false","complete":"validator","x":647,"y":174,"wires":[]},{"id":"b21f3c9a.ee09b","type":"debug","z":"1f7e959f.0bf9fa","name":"CMX Data","active":true,"console":"false","complete":"payload","x":657,"y":134,"wires":[]},{"id":"1c8e08f7.1b7cf7","type":"Meraki CMX","z":"1f7e959f.0bf9fa","name":"","url":"/cmx","settings":"f9192447.dc2f58","x":107,"y":146,"wires":[["15a92edc.c165a1","b21f3c9a.ee09b","9e341f2d.8dd0d"]]},{"id":"6a8807f7.f7bc18","type":"json","z":"1f7e959f.0bf9fa","name":"Convert JSON object to string, for basic searching","x":297,"y":334,"wires":[["289acfe7.2779d"]]},{"id":"367f682e.27fbc8","type":"debug","z":"1f7e959f.0bf9fa","name":"cmx via link","active":true,"console":"false","complete":"payload","x":637,"y":794,"wires":[]},{"id":"9e341f2d.8dd0d","type":"link out","z":"1f7e959f.0bf9fa","name":"cmx","links":["6a9957e4.71eea8","1736fdc4.50c9f2","ae6d73ea.ce537","7a17db2d.f45ce4","e61b9855.15ecf8","7f435bd3.20e0b4","7791d2a8.94d89c"],"x":702,"y":214,"wires":[]},{"id":"6a9957e4.71eea8","type":"link in","z":"1f7e959f.0bf9fa","name":"","links":["9e341f2d.8dd0d"],"x":62,"y":794,"wires":[["367f682e.27fbc8","a58a0739.c2e578"]]},{"id":"a0b5459e.f65d78","type":"file","z":"1f7e959f.0bf9fa","name":"","filename":"cmxdata.log","appendNewline":true,"createDir":true,"overwriteFile":"false","x":617,"y":834,"wires":[]},{"id":"fce41a76.5ab1e8","type":"file in","z":"1f7e959f.0bf9fa","name":"","filename":"cmxdata.log","format":"utf8","x":377,"y":914,"wires":[["31d513b7.c6ed0c"]]},{"id":"2154988e.c16968","type":"http in","z":"1f7e959f.0bf9fa","name":"","url":"/cmxdata","method":"get","swaggerDoc":"","x":117,"y":1074,"wires":[["8085df49.5b87a"]]},{"id":"3fa92a51.72f476","type":"http response","z":"1f7e959f.0bf9fa","name":"","x":657,"y":1074,"wires":[]},{"id":"8085df49.5b87a","type":"file in","z":"1f7e959f.0bf9fa","name":"","filename":"cmxdata.log","format":"utf8","x":317,"y":1074,"wires":[["ea7d527.f5163b"]]},{"id":"a58a0739.c2e578","type":"function","z":"1f7e959f.0bf9fa","name":"clean data","func":"if (msg.payload !== null){\n    return msg;\n}","outputs":1,"noerr":0,"x":377,"y":834,"wires":[["a0b5459e.f65d78"]]},{"id":"f3bd1f60.2ac12","type":"inject","z":"1f7e959f.0bf9fa","name":"DELETE Logs","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":177,"y":954,"wires":[["dfd54c16.5a791"]]},{"id":"dfd54c16.5a791","type":"file","z":"1f7e959f.0bf9fa","name":"","filename":"cmxdata.log","appendNewline":true,"createDir":true,"overwriteFile":"delete","x":597,"y":954,"wires":[]},{"id":"ea7d527.f5163b","type":"json","z":"1f7e959f.0bf9fa","name":"","x":497,"y":1074,"wires":[["3fa92a51.72f476"]]},{"id":"ab5ea4f5.519d38","type":"comment","z":"1f7e959f.0bf9fa","name":"Store and View Data","info":"View the logs by going to\nhttp://yourserver:1880/cmxdata\n\nUse PostMan as a quick way to see the \ndata in JSON pretty format\n\n","x":117,"y":754,"wires":[]},{"id":"d0144853.1fb6f8","type":"comment","z":"1f7e959f.0bf9fa","name":"CMX Basic Flow - README","info":"This flow demonstrates how to use the Meraki CMX node.\n\nConfigure the CMX node with your URL & credentials\n\nThe server will start listening on the same port\nas Node-RED but will receive data on the \nURL configured\n\n# Example\nhttp://yourserver:1880/cmx\n\n# View the logs by going to\nhttp://yourserver:1880/cmxdata\n\nUse PostMan as a quick way to see the \ndata in JSON pretty format\n\nWritten by \nCory Guynn\nhttp://www.InternetOfLEGO.com\n\n\n","x":407,"y":34,"wires":[]},{"id":"1736fdc4.50c9f2","type":"link in","z":"1f7e959f.0bf9fa","name":"","links":["9e341f2d.8dd0d"],"x":62,"y":334,"wires":[["6a8807f7.f7bc18"]]},{"id":"bd2918e7.0899b8","type":"comment","z":"1f7e959f.0bf9fa","name":"Workflow Examples","info":"","x":117,"y":234,"wires":[]},{"id":"ae6d73ea.ce537","type":"link in","z":"1f7e959f.0bf9fa","name":"","links":["9e341f2d.8dd0d"],"x":62,"y":534,"wires":[["3f89f699.14f04a","7fa0f54.c77080c","204ec406.7edf0c","6d04ba18.7e5c84","66b644d0.7e4c9c"]]},{"id":"3f89f699.14f04a","type":"change","z":"1f7e959f.0bf9fa","name":"payload.data.apMac","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.data.apMac","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":247,"y":534,"wires":[["12458f01.c74b11"]]},{"id":"12458f01.c74b11","type":"debug","z":"1f7e959f.0bf9fa","name":"apMac","active":true,"console":"false","complete":"payload","x":677,"y":534,"wires":[]},{"id":"7fa0f54.c77080c","type":"change","z":"1f7e959f.0bf9fa","name":"payload.data.observations[0].clientMac","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.data.observations[0].clientMac","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":307,"y":574,"wires":[["26552b9e.350604"]]},{"id":"26552b9e.350604","type":"debug","z":"1f7e959f.0bf9fa","name":"observation[0] - clientMac","active":true,"console":"false","complete":"payload","x":617,"y":574,"wires":[]},{"id":"204ec406.7edf0c","type":"change","z":"1f7e959f.0bf9fa","name":"payload.data.observations[1].clientMac","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.data.observations[1].clientMac","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":307,"y":654,"wires":[["9d641d30.cbabf"]]},{"id":"9d641d30.cbabf","type":"debug","z":"1f7e959f.0bf9fa","name":"observation[1] - clientMac","active":true,"console":"false","complete":"payload","x":617,"y":654,"wires":[]},{"id":"6d04ba18.7e5c84","type":"change","z":"1f7e959f.0bf9fa","name":"payload.data.observations[0].location","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.data.observations[0].location","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":297,"y":614,"wires":[["a698925d.45d69"]]},{"id":"66b644d0.7e4c9c","type":"change","z":"1f7e959f.0bf9fa","name":"payload.data.observations[1].location","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.data.observations[1].clientMac","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":297,"y":694,"wires":[["8b37b12.5d5295"]]},{"id":"a698925d.45d69","type":"debug","z":"1f7e959f.0bf9fa","name":"observation[0] - location","active":true,"console":"false","complete":"payload","x":617,"y":614,"wires":[]},{"id":"8b37b12.5d5295","type":"debug","z":"1f7e959f.0bf9fa","name":"observation[1] - location","active":true,"console":"false","complete":"payload","x":617,"y":694,"wires":[]},{"id":"c1df4ecb.c7b1d","type":"comment","z":"1f7e959f.0bf9fa","name":"Search JSON as a string","info":"","x":157,"y":274,"wires":[]},{"id":"70df5795.fb49b8","type":"comment","z":"1f7e959f.0bf9fa","name":"Search JSON as an object","info":"","x":157,"y":494,"wires":[]},{"id":"7a2f04b7.e1185c","type":"comment","z":"1f7e959f.0bf9fa","name":"Log File","info":"View the logs by going to\nhttp://yourserver:1880/cmxdata\n\nUse PostMan as a quick way to see the \ndata in JSON pretty format\n\n","x":97,"y":854,"wires":[]},{"id":"b12244d4.fc8f98","type":"comment","z":"1f7e959f.0bf9fa","name":"REST API client interface","info":"View the logs by going to\nhttp://yourserver:1880/cmxdata\n\nUse PostMan as a quick way to see the \ndata in JSON pretty format\n\n","x":157,"y":1034,"wires":[]},{"id":"a01bb5.13cec448","type":"comment","z":"1f7e959f.0bf9fa","name":"CMX Listener","info":"","x":97,"y":94,"wires":[]},{"id":"1d02b674.b4d51a","type":"inject","z":"1f7e959f.0bf9fa","name":"DELETE - AUTO CLEAN","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":191.5,"y":991,"wires":[["9fd9370a.4324f8"]]},{"id":"9fd9370a.4324f8","type":"delay","z":"1f7e959f.0bf9fa","name":"","pauseType":"delay","timeout":"2","timeoutUnits":"days","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":391.5,"y":992,"wires":[["dfd54c16.5a791"]]},{"id":"2fd87a7f.65eba6","type":"http in","z":"669f5cc3.759de4","name":"","url":"/clients","method":"get","swaggerDoc":"","x":123,"y":531,"wires":[["912dfdbe.14f7b","8f64f62a.c55c58"]]},{"id":"c4d045df.6b6538","type":"http in","z":"669f5cc3.759de4","name":"","url":"/clients/:mac","method":"get","swaggerDoc":"","x":143,"y":611,"wires":[["1e915f95.70af"]]},{"id":"9f664eb.55258b","type":"mongodb2 in","z":"669f5cc3.759de4","service":"_ext_","configNode":"5ac6f566.6b4fec","name":"","collection":"cmxmapapi","operation":"findOne","x":403,"y":731,"wires":[["b059bd6f.caab5","45c56259.46d5dc"]]},{"id":"ca3cc12c.07bf9","type":"mongodb2 in","z":"669f5cc3.759de4","service":"_ext_","configNode":"5ac6f566.6b4fec","name":"","collection":"cmxmapapi","operation":"find.toArray","x":513,"y":531,"wires":[["983614f8.7187a8","996efacb.f9fe98"]]},{"id":"429d5c2e.001b54","type":"debug","z":"669f5cc3.759de4","name":"/clients/:mac","active":false,"console":"false","complete":"payload","x":723,"y":611,"wires":[]},{"id":"b059bd6f.caab5","type":"debug","z":"669f5cc3.759de4","name":"/clients/:mac - mongodb","active":false,"console":"false","complete":"payload","x":683,"y":771,"wires":[]},{"id":"45c56259.46d5dc","type":"http response","z":"669f5cc3.759de4","name":"","x":743,"y":731,"wires":[]},{"id":"983614f8.7187a8","type":"http response","z":"669f5cc3.759de4","name":"","x":743,"y":531,"wires":[]},{"id":"1e915f95.70af","type":"function","z":"669f5cc3.759de4","name":"msg.payload=msg.req.params.mac;","func":"//extract mac\nmsg.payload=msg.req.params.mac;\nreturn msg;\n","outputs":1,"noerr":0,"x":443,"y":611,"wires":[["429d5c2e.001b54","4319b11a.9339a"]]},{"id":"63f24dcf.2ae684","type":"comment","z":"669f5cc3.759de4","name":"Log data","info":"","x":153,"y":251,"wires":[]},{"id":"8bd63bcb.b958a8","type":"function","z":"669f5cc3.759de4","name":"build operation parameters: filter, update","func":"// This function updates/creates the client in the database\nvar filter = msg.payload;\nif (\"string\" == typeof filter) {\n  filter = JSON.parse(filter);\n}\n\nmsg.payload = [\n    {'name':msg.payload.name},\n    msg.payload,\n    {upsert:true}\n];\n\nreturn msg;\n","outputs":1,"noerr":0,"x":433,"y":311,"wires":[["6993c9aa.eb5798"]]},{"id":"6993c9aa.eb5798","type":"mongodb2 in","z":"669f5cc3.759de4","service":"_ext_","configNode":"5ac6f566.6b4fec","name":"","collection":"cmxmapapi","operation":"findOneAndUpdate","x":423,"y":351,"wires":[["fff6658.7ea4498"]]},{"id":"fff6658.7ea4498","type":"debug","z":"669f5cc3.759de4","name":"mongdb insert/update","active":false,"console":"false","complete":"payload","x":693,"y":351,"wires":[]},{"id":"cfe895e3.578158","type":"function","z":"669f5cc3.759de4","name":"Format Client","func":"// This function extracts the raw CMX data to create a consistent DB entry\nif(msg.payload === null){\n    return null;\n}\nvar map = msg.payload;\nclient = {}; //reset payload object for clarity\n\n\nif (map['version'] != '2.0'){\n    msg.log = \"got post with unexpected version: #{map['version']}\";\n    return msg;\n}else{\n    msg.log = \"working with correct version\";\n}\n/*\nif (map['type'] != 'DevicesSeen' || 'BluetoothDevicesSeen'){\nmsg.log = \"got post for event that we're not interested in: #{map['type']}\";\nreturn msg;\n}\n*/\n\nvar o = map['data']['observations'];\nconsole.log('map.data.apMac = '+map.data['apMac']);\n   for (var c in o){\n    if (o.hasOwnProperty(c)) {\n        //console.log(\"Key is \" + c + \", value is \" + o[c].location.lat);\n        if (!o[c]['location']){continue}\n        client.name = o[c]['clientMac'];\n        client.mac = o[c]['clientMac'];\n        client.lat = o[c]['location']['lat'];\n        client.lng = o[c]['location']['lng'];\n        client.unc = o[c]['location']['unc'];\n        client.seenString = o[c]['seenTime'];\n        client.seenEpoch = o[c]['seenEpoch'];\n        client.floors = map['data']['apFloors'] === null ? \"\" : map['data']['apFloors'].join;\n        client.manufacturer = o[c]['manufacturer'];\n        client.os = o[c]['os'];\n        client.ssid = o[c]['ssid'];\n        client.ap = map['data']['apMac'];\n        client.apTags = map['data']['apTags'];\n        client.type = map['type'] === \"BluetoothDevicesSeen\" ? \"Bluetooth\" : \"WiFi\";\n        msg.log = \"AP #{map['data']['apMac']} on #{map['data']['apFloors']}: #{c}\";\n        if (client.seenEpoch===null || client.seenEpoch === 0){continue}//  # This probe is useless, so ignore it\n        \n    }\n    msg.payload = client;\n    node.send(msg);\n   }\n\n   \nreturn msg;","outputs":1,"noerr":0,"x":353,"y":251,"wires":[["1e85e44a.23ee4c","51fb220e.8db13c","8bd63bcb.b958a8"]]},{"id":"1e85e44a.23ee4c","type":"debug","z":"669f5cc3.759de4","name":"format client","active":true,"console":"false","complete":"payload","x":723,"y":291,"wires":[]},{"id":"d52880ed.f361c","type":"debug","z":"669f5cc3.759de4","name":"/cmx3 Raw Data","active":false,"console":"false","complete":"payload","x":703,"y":411,"wires":[]},{"id":"912dfdbe.14f7b","type":"function","z":"669f5cc3.759de4","name":"find({})","func":"// Create search for all clients\nmsg.payload = {};\nreturn msg;","outputs":1,"noerr":0,"x":303,"y":531,"wires":[["ca3cc12c.07bf9"]]},{"id":"4319b11a.9339a","type":"function","z":"669f5cc3.759de4","name":"msg.payload = {'name':msg.payload};","func":"msg.payload = {'name':msg.payload};\nreturn msg;","outputs":1,"noerr":0,"x":443,"y":671,"wires":[["9f664eb.55258b"]]},{"id":"e87e4cbd.d0211","type":"function","z":"669f5cc3.759de4","name":"CMX Sample Data","func":"msg.payload = {\n    \"version\": \"2.0\",\n    \"secret\": \"supersecret\",\n    \"type\": \"DevicesSeen\",\n    \"data\": {\n        \"apMac\": \"00:18:0a:13:dd:b0\",\n        \"apFloors\": [],\n        \"apTags\": [ \"\", \"home\", \"\" ],\n        \"observations\": [ { \n            \"ipv4\": \"/192.168.0.15\",\n            \"location\": {\n                \"lat\": 51.5355157,\n                \"lng\": -0.06990350000000944,\n                \"unc\": 1.1185886512767726,\n                \"x\": [], \"y\": [] \n                \n            },\n            \"seenTime\": \"2016-07-29T13:17:10Z\",\n            \"ssid\": \".interwebs\",\n            \"os\": \"Debian-based Linux\",\n            \"clientMac\": \"CC:CC:CC:CC:CC:CC\",\n            \"seenEpoch\": 1469798230,\n            \"rssi\": 48,\n            \"ipv6\": null,\n            \"manufacturer\": \"Edimax Technology\" \n            }, \n            { \n            \"ipv4\": null,\n            \"location\": {\n                \"lat\": 51.5133157,\n                \"lng\": -0.06890350000000944,\n                \"unc\": 49, \"x\": [],\n                \"y\": []\n                },\n            \"seenTime\": \"2016-07-29T13:17:07Z\",\n            \"ssid\": \"Hotspot-123\",\n            \"os\": \"fancyOS\",\n            \"clientMac\": \"DD:DD:DD:DD:DD:DD\",\n            \"seenEpoch\": 1469798227,\n            \"rssi\": 9,\n            \"ipv6\": null,\n            \"manufacturer\": \"Samsung(THAILAND)\"\n            }\n        ]\n    }\n};\nreturn msg;","outputs":1,"noerr":0,"x":363,"y":191,"wires":[["cfe895e3.578158","49476d38.007ec4"]]},{"id":"8f0f782f.2f1cd8","type":"inject","z":"669f5cc3.759de4","name":"Sample Client C D","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":143,"y":191,"wires":[["e87e4cbd.d0211"]]},{"id":"49476d38.007ec4","type":"debug","z":"669f5cc3.759de4","name":"CMX Sample Raw Data","active":false,"console":"false","complete":"payload","x":683,"y":191,"wires":[]},{"id":"51fb220e.8db13c","type":"debug","z":"669f5cc3.759de4","name":"format client. info","active":true,"console":"false","complete":"info","x":703,"y":251,"wires":[]},{"id":"9132f00c.fe853","type":"mongodb2 in","z":"669f5cc3.759de4","service":"_ext_","configNode":"5ac6f566.6b4fec","name":"","collection":"cmxmapapi","operation":"find.toArray","x":413,"y":971,"wires":[["a06a038c.5f2c3"]]},{"id":"ee99e760.680468","type":"inject","z":"669f5cc3.759de4","name":"List all clients","topic":"","payload":"{}","payloadType":"json","repeat":"","crontab":"","once":false,"x":123,"y":971,"wires":[["9132f00c.fe853"]]},{"id":"a06a038c.5f2c3","type":"debug","z":"669f5cc3.759de4","name":"List mongo data","active":true,"console":"false","complete":"true","x":733,"y":971,"wires":[]},{"id":"2499ad1d.4c4af2","type":"template","z":"669f5cc3.759de4","name":"CSS","field":"payload.style","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"html, body {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-family: \"proxima-nova-1\",\"proxima-nova-2\", \"Helvetica Neue\", Helvetica, verdana, sans-serif;\n  -webkit-font-smoothing: antialiased;\n}\n\n#masthead {\n  height: 125px;\n  width: 100%;\n  position: relative;\n  background: #FFFFFF;\n  border-top: 4px solid #78be20;\n  box-shadow: 0 2px 7px rgba(0,0,0,0.2);\n}\n\n#masthead-content {\n  margin: 0 auto;\n  position: relative;\n  width: 80%;\n  height: 100%;\n}\n\n#masthead-content img {\n  float: left;\n  margin: 32px;\n  width: 165px;\n  margin-left: 0;\n}\n\n#content {\n  width: 80%;\n  margin: 60px auto;\n  padding: 40px;\n  box-sizing: border-box;\n  border-radius: 9px;\n  background: #FAFAFA;\n}\n\n#mac-address {\n  margin-bottom: 10px;\n}\n\n#mac-field {\n  width: 30%;\n  height: 35px;\n  margin-bottom: 20px;\n  padding-left: 13px;\n  border: 1px solid #E6E6E6;\n  border-radius: 2px;\n  box-sizing: border-box;\n  font-family: \"proxima-nova-1\",\"proxima-nova-2\", \"Helvetica Neue\", Helvetica, verdana, sans-serif;\n  font-size: 16px;\n  font-weight: 100;\n  min-width: 136px;\n}\n\n#map-wrapper {\n  width: 100%;\n  height: 700px;\n}\n\n#map-canvas {\n  height: 70%;\n  width: 70%;\n}\n\n\nh1 {\n  color: #78be20;\n  font-weight: 100;\n  font-size: 38px;\n  margin-top: 0;\n  letter-spacing: -1px;\n}\n\n\n#last-mac {\n  color: #6B6B6B;\n  width: 100%;\n  font-weight: 400;\n  margin-bottom: 10px;\n  font-size: 14px;\n}\n\n.small {\n  color: #6B6B6B;\n  font-weight: 400;\n  margin-bottom: 30px;\n  font-size: 14px;\n}\n\n.bold {\n  font-weight: 600;\n}\n\nbutton, input {\n  width: 11%;\n}\n\nbutton {\n  height: 35px;\n  border: none;\n  background: #737373;\n  border-radius: 2px;\n  box-sizing: border-box;\n  color: white;\n  font-family: \"proxima-nova-1\",\"proxima-nova-2\", \"Helvetica Neue\", Helvetica, verdana, sans-serif;\n  font-weight: 200;\n  font-size: 14px;\n  padding: 0;\n  min-width: 70px;\n}\n\nbutton:hover{\n  background: #616060;\n}\n","x":485,"y":872,"wires":[["fd5edb9f.aeda28"]]},{"id":"30f9c346.d4b2fc","type":"http in","z":"669f5cc3.759de4","name":"","url":"/cmxapimap","method":"get","swaggerDoc":"","x":133,"y":871,"wires":[["77a9ea58.615f14"]]},{"id":"2eee7a1.8dcbb86","type":"http response","z":"669f5cc3.759de4","name":"","x":743,"y":871,"wires":[]},{"id":"fd5edb9f.aeda28","type":"template","z":"669f5cc3.759de4","name":"HTML","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<html>\n  <head>\n    <title>CMX push API demo app with Node-RED</title>\n    <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n    <meta charset=\"utf-8\">\n<script src=\"https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&key=AIzaSyCWFVfLzjGaepofBse9sHFF-S-mtqVjzLA\"></script>\n<script type=\"text/javascript\" src=\"https://cdn.rawgit.com/googlemaps/v3-utility-library/master/markerclustererplus/src/markerclusterer.js\"></script>\n    <script src=\"http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.0/jquery.min.js\"></script>\n    <script>{{{payload.script}}}</script>\n    <style>{{{payload.style}}}</style>\n  </head>\n  <body>\n    <div id=\"masthead\">\n      <div id=\"masthead-content\">\n        <img src=\"https://meraki.cisco.com/img/cisco-meraki.png\"/>\n      </div>\n    </div>\n    <div id=\"content\">\n      <h1>CMX API Demo with Node-RED</h1>\n      <div id=\"mac-address\">\n        <input id=\"mac-field\" type=\"text\" placeholder=\"Enter MAC address\" />&nbsp;\n        <button id=\"track\">Follow</button>&nbsp;\n        <button id=\"all\">View All</button>\n        <button><a href=/clients target=\"_blank\" style=\"text-decoration:none; color: inherit\">View All - JSON</a></button>\n      </div>\n      <div id=\"last-mac\"></div>\n      <div class=\"small\"><span class=\"bold\">Clients in the wrong place?</span> Make sure your APs are placed properly in Dashboard.</div>\n      <div id=\"map-wrapper\">\n        <div id=\"map-canvas\"></div>\n      </div>\n    </div>\n  </body>\n</html>","x":603,"y":871,"wires":[["2eee7a1.8dcbb86"]]},{"id":"996efacb.f9fe98","type":"debug","z":"669f5cc3.759de4","name":"find({})","active":true,"console":"false","complete":"payload","x":743,"y":571,"wires":[]},{"id":"feec2149.4c6fd","type":"comment","z":"669f5cc3.759de4","name":"Client Front-end API","info":"","x":123,"y":491,"wires":[]},{"id":"f6015d27.6835","type":"comment","z":"669f5cc3.759de4","name":"Receive CMX Data","info":"","x":123,"y":111,"wires":[]},{"id":"7588ced3.17ec3","type":"comment","z":"669f5cc3.759de4","name":"Utilities","info":"","x":83,"y":931,"wires":[]},{"id":"ae31f239.b2703","type":"function","z":"669f5cc3.759de4","name":"CMX Sample Data","func":"msg.payload = {\n    \"version\": \"2.0\",\n    \"secret\": \"supersecret\",\n    \"type\": \"DevicesSeen\",\n    \"data\": {\n        \"apMac\": \"00:18:0a:13:dd:b0\",\n        \"apFloors\": [],\n        \"apTags\": [ \"\", \"home\", \"\" ],\n        \"observations\": [ { \n            \"ipv4\": \"/192.168.0.15\",\n            \"location\": {\n                \"lat\": 51.5155157,\n                \"lng\": -0.06590350000000944,\n                \"unc\": 1.2185886512767726,\n                \"x\": [], \"y\": [] \n                \n            },\n            \"seenTime\": \"2016-07-29T13:17:10Z\",\n            \"ssid\": \".interwebs\",\n            \"os\": \"Debian-based Linux\",\n            \"clientMac\": \"AA:AA:AA:AA:AA:AA\",\n            \"seenEpoch\": 1469795230,\n            \"rssi\": 48,\n            \"ipv6\": null,\n            \"manufacturer\": \"Edimax Technology\" \n            }, \n            { \n            \"ipv4\": null,\n            \"location\": {\n                \"lat\": 51.5215157,\n                \"lng\": -0.069905350000000944,\n                \"unc\": 49, \"x\": [],\n                \"y\": []\n                },\n            \"seenTime\": \"2016-07-29T13:17:07Z\",\n            \"ssid\": null,\n            \"os\": null,\n            \"clientMac\": \"BB:BB:BB:BB:BB:BB\",\n            \"seenEpoch\": 1469598227,\n            \"rssi\": 9,\n            \"ipv6\": null,\n            \"manufacturer\": \"Samsung(THAILAND)\"\n            }\n        ]\n    }\n};\nreturn msg;","outputs":1,"noerr":0,"x":363,"y":151,"wires":[["cfe895e3.578158"]]},{"id":"737d6377.35bf7c","type":"inject","z":"669f5cc3.759de4","name":"Sample Client A B","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":143,"y":151,"wires":[["ae31f239.b2703"]]},{"id":"82aef8cf.c4a748","type":"comment","z":"669f5cc3.759de4","name":"Client Front-end Site","info":"","x":123,"y":831,"wires":[]},{"id":"77b2b52b.cae59c","type":"comment","z":"669f5cc3.759de4","name":"README","info":"#Cisco Meraki CMX API - Demo Map\nThis Flow is an example of how to use the Cisco Meraki CMX\nJSON feed to store clients into a database and track them\non a Google map.\n\nThere are three major components\n- CMX Receier\n- Front-end API\n- Front-end Website (Google MAP)\n\n\n##CMX Receier -\nThe CMX Receiver utilizes the Node-RED CMX node to collect\nJSON data from a Cisco Meraki network. This feed is generally\nupdated within 2 minutes. There are two Sample Clients feeds\nthat can be used to test the flow.\n\nOnce the data has been received, the JSON is parsed and\ncommitted to a MongoDB. Please ensure your MongoDB is running\nfor this flow to work properly.\n\n\n##Front-end API - \nThere are two [GET] HTTP routes that provide access to the \ncollected client data. These will be used by the front-end \nwebsite to pull the client information for all or specific\nclients. Fun Fact: You can also use these routes with Postman\nor a standard browser to pull the data directly.\n\n##Front-end Website - \nThis will provide the webpage to view the Google map and \ntrack clients.\nThe website can be viewed at\n`http://yourserver:1880/cmxapimap`\n\n#Setup\n- Configure a Cisco Meraki network to post the CMX JSON to\nyour listening URL. Example: `http://yourserver:1880/cmx`\n\n- Install and configure MongoDB. Then update the MongoDB2 \nnodes within your flow to match the appropriate settings.\nExample: `mongodb://localhost:27017/test`\n\n- Insert Sample Client information by pressing the blue\nbuttons for each. Note, this will place the clients in London\nby default. Remove these clients if you do not want to \nconfuse your map centering\n\nMore information can be found on the Meraki Developers portal\nhttp://developers.meraki.com/tagged/Location\n\n\nThis flow was created by \nCory Guynn\nSystems Engineer\nCisco Meraki \n2016\n\nFor other fun IoT projects\nhttp://www.InternetOfLEGO.com\n\nMIT License. \n\n","x":403,"y":31,"wires":[]},{"id":"e61b9855.15ecf8","type":"link in","z":"669f5cc3.759de4","name":"","links":["9e341f2d.8dd0d"],"x":79.5,"y":349,"wires":[["cfe895e3.578158","d52880ed.f361c"]]},{"id":"da4d4739.2aeec8","type":"mongodb2 in","z":"669f5cc3.759de4","service":"_ext_","configNode":"5ac6f566.6b4fec","name":"","collection":"cmxmapapi","operation":"removeMany","x":422,"y":1015,"wires":[["e89433af.be449"]]},{"id":"85d7e2ec.bbb76","type":"inject","z":"669f5cc3.759de4","name":"DELETE all clients","topic":"","payload":"{}","payloadType":"json","repeat":"","crontab":"","once":false,"x":142,"y":1015,"wires":[["da4d4739.2aeec8"]]},{"id":"e89433af.be449","type":"debug","z":"669f5cc3.759de4","name":"DELETE mongo data","active":true,"console":"false","complete":"true","x":752,"y":1015,"wires":[]},{"id":"8f64f62a.c55c58","type":"function","z":"669f5cc3.759de4","name":"apTags contains IONIS","func":"msg.payload = {'apTags':{$in:['test']}};\nreturn msg;","outputs":1,"noerr":0,"x":360.5,"y":482,"wires":[[]]},{"id":"ed356575.8953e8","type":"inject","z":"669f5cc3.759de4","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":139.5,"y":441,"wires":[["8f64f62a.c55c58"]]},{"id":"9534130d.5d204","type":"Spark API","z":"17ab7b4c.f6d865","profileConfig":"e9cd24a5.ac2b78","apiUrl":"http://ec2-52-211-241-52.eu-west-1.compute.amazonaws.com:1880/api/cisco_spark_v1.json","resource":"Rooms","method":"getRooms","name":"","x":510,"y":140,"wires":[["d81ba5da.05dab8"]]},{"id":"1c534fe1.58be4","type":"inject","z":"17ab7b4c.f6d865","name":"Spark Rooms","topic":"","payload":"","payloadType":"str","repeat":"","crontab":"","once":false,"x":130,"y":140,"wires":[["c96b0ca5.b01a5"]]},{"id":"d81ba5da.05dab8","type":"debug","z":"17ab7b4c.f6d865","name":"Spark Rooms","active":false,"console":"false","complete":"payload","x":820,"y":140,"wires":[]},{"id":"7dca35d8.ffe13c","type":"Spark API","z":"17ab7b4c.f6d865","profileConfig":"e9cd24a5.ac2b78","apiUrl":"http://ec2-52-211-241-52.eu-west-1.compute.amazonaws.com:1880/api/cisco_spark_v1.json","resource":"Messages","method":"getMessages","name":"","x":530,"y":234,"wires":[["93fd4bf3.f1ebb8"]]},{"id":"171f0f92.d7864","type":"inject","z":"17ab7b4c.f6d865","name":"Get Messages","topic":"","payload":"","payloadType":"str","repeat":"","crontab":"","once":false,"x":130,"y":234,"wires":[["f592df32.7f7f"]]},{"id":"93fd4bf3.f1ebb8","type":"debug","z":"17ab7b4c.f6d865","name":"Get Messages","active":false,"console":"false","complete":"payload","x":820,"y":234,"wires":[]},{"id":"37cd23cd.6a535c","type":"Spark API","z":"17ab7b4c.f6d865","profileConfig":"e9cd24a5.ac2b78","apiUrl":"http://ec2-52-211-241-52.eu-west-1.compute.amazonaws.com:1880/api/cisco_spark_v1.json","resource":"Messages","method":"createMessage","name":"","x":639,"y":377,"wires":[["7176d003.31153"]]},{"id":"a8eb0db9.ccf99","type":"inject","z":"17ab7b4c.f6d865","name":"Create Message","topic":"","payload":"howdy","payloadType":"str","repeat":"","crontab":"","once":false,"x":140,"y":337,"wires":[["c154175.3f758e8"]]},{"id":"7176d003.31153","type":"debug","z":"17ab7b4c.f6d865","name":"Create Message","active":false,"console":"false","complete":"payload","x":874,"y":377,"wires":[]},{"id":"c154175.3f758e8","type":"function","z":"17ab7b4c.f6d865","name":"room Node-RED","func":"var text = msg.payload.toString();\nmsg.payload = {}; // clear object before formatting new spark message\nmsg.payload.body = {\n\t\"roomId\": \"Y2lzY29zcGFyazovL3VzL1JPT00vMWQ2ZGNhZDAtZDFiMS0xMWU2LTk1ZmYtM2ZhMzljMGM0ODBl\",\n\t\"text\": text\n};\nreturn msg;","outputs":1,"noerr":0,"x":290,"y":380,"wires":[[]]},{"id":"f592df32.7f7f","type":"function","z":"17ab7b4c.f6d865","name":"room Node-RED","func":"msg.payload = {\n    \n    \"roomId\":\"Y2lzY29zcGFyazovL3VzL1JPT00vMWQ2ZGNhZDAtZDFiMS0xMWU2LTk1ZmYtM2ZhMzljMGM0ODBl\"\n};\nreturn msg;","outputs":1,"noerr":0,"x":290,"y":274,"wires":[["7dca35d8.ffe13c"]]},{"id":"c96b0ca5.b01a5","type":"function","z":"17ab7b4c.f6d865","name":"Search All","func":"msg.payload = {};\nreturn msg;","outputs":1,"noerr":0,"x":260,"y":180,"wires":[["9534130d.5d204"]]},{"id":"7f435bd3.20e0b4","type":"link in","z":"17ab7b4c.f6d865","name":"","links":["9e341f2d.8dd0d"],"x":41,"y":483,"wires":[["fca71ae6.646348","66dfa10.885e36","7a64fd6a.bd2894","8c2caf9b.d1152"]]},{"id":"fca71ae6.646348","type":"change","z":"17ab7b4c.f6d865","name":"payload.data.observations[0].clientMac","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.data.observations[0].clientMac","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":360,"y":480,"wires":[[]]},{"id":"66dfa10.885e36","type":"change","z":"17ab7b4c.f6d865","name":"payload.data.observations[0].location.lat","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.data.observations[0].location.lat","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":360,"y":520,"wires":[[]]},{"id":"bc366460.11ff58","type":"comment","z":"17ab7b4c.f6d865","name":"Spark Examples","info":"","x":110,"y":100,"wires":[]},{"id":"1c694125.5df52f","type":"comment","z":"17ab7b4c.f6d865","name":"Meraki CMX Integration","info":"","x":120,"y":440,"wires":[]},{"id":"7a64fd6a.bd2894","type":"change","z":"17ab7b4c.f6d865","name":"payload.data.observations[0].location.lat","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.data.observations[0].location.lat","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":360,"y":560,"wires":[[]]},{"id":"8c2caf9b.d1152","type":"function","z":"17ab7b4c.f6d865","name":"Client Location formatted","func":"var client, lat, lng, text;\n\n/*\nfor (i = 0; i++; i<msg.payload.data.observations.length()){\n    client = msg.payload.data.observations[i].clientMac;\n    lat = msg.payload.data.observations[i].location.lat;\n    lng = msg.payload.data.observations[i].location.lng;\n    text += \"Client: \"+ client+\"\\n lat: \"+lat+\"\\n lng: \"+lng+ \"\\n\";\n}\nmsg.payload = \"Observations \\n\" +text;\n*/\n\nmsg.payload.data.observations.forEach(function(entry){\n    text += entry;\n    \n})\nreturn msg;","outputs":1,"noerr":0,"x":330,"y":600,"wires":[["c154175.3f758e8","35bc0bc1.039784"]]},{"id":"35bc0bc1.039784","type":"debug","z":"17ab7b4c.f6d865","name":"CMX Message","active":false,"console":"false","complete":"payload","x":800,"y":560,"wires":[]},{"id":"720f7ed2.f589e","type":"http request","z":"86c1f8e1.623368","name":"","method":"GET","ret":"txt","url":"","tls":"","x":530,"y":240,"wires":[["864b3c8c.e5e24","2cbf15d3.e1d23a"]]},{"id":"4f17f2b8.95484c","type":"function","z":"86c1f8e1.623368","name":"set headers and url","func":"msg.headers = {\n    \"X-Cisco-Meraki-API-Key\":flow.get('apiKey')\n}\n\nmsg.url = \"https://dashboard.meraki.com/api/v0/organizations/\"+msg.payload+\"/networks\";\nreturn msg;","outputs":1,"noerr":0,"x":330,"y":240,"wires":[["720f7ed2.f589e"]]},{"id":"aea08f96.c3fea","type":"inject","z":"86c1f8e1.623368","name":"List Networks","topic":"","payload":"306267","payloadType":"num","repeat":"","crontab":"","once":false,"x":110,"y":240,"wires":[["4f17f2b8.95484c"]]},{"id":"13945f55.9a8801","type":"inject","z":"86c1f8e1.623368","name":"Set API key (auto)","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"x":130,"y":60,"wires":[["ed051b30.be8598"]]},{"id":"ed051b30.be8598","type":"function","z":"86c1f8e1.623368","name":"set API key","func":"\n\nvar apiKey = \"be647eed3046542a895ea9ad07b7f7cef4c002de\";\n\nflow.set('apiKey',apiKey);\n\n\n\n/*\nvar count = flowContext.get('count')||0; //set(\"foo\",\"bar\");\n\n\n\nflowContext.set(\"organizationId\", \"306267\");\nflowContext.set(\"networkId\",\"N_643451796760562822\");\n\nflow.context.organizationId = msg.payload.organizationId || \"306267\";\nmsg.payload.networkId = msg.payload.networkId || \"N_643451796760562822\";\n*/\nmsg.payload = \"API Key set: \"+flow.get('apiKey');\nreturn msg;","outputs":1,"noerr":0,"x":370,"y":60,"wires":[["b9d7943a.a44138"]]},{"id":"b9d7943a.a44138","type":"debug","z":"86c1f8e1.623368","name":"Env variables","active":true,"console":"false","complete":"payload","x":620,"y":60,"wires":[]},{"id":"864b3c8c.e5e24","type":"debug","z":"86c1f8e1.623368","name":"Network List","active":true,"console":"false","complete":"payload","x":750,"y":240,"wires":[]},{"id":"178b6681.ef6d79","type":"debug","z":"86c1f8e1.623368","name":"Org and Net id","active":true,"console":"false","complete":"options","x":620,"y":120,"wires":[]},{"id":"d4d98bba.02a088","type":"function","z":"86c1f8e1.623368","name":"flow.set('orgId',msg.payload);","func":"\n\n\nflow.set('orgId',msg.payload);\n\nmsg.payload = flow.get('orgId');\n\nreturn msg;","outputs":"1","noerr":0,"x":360,"y":160,"wires":[["178b6681.ef6d79","4f666b6a.f38444","4f17f2b8.95484c"]]},{"id":"4f666b6a.f38444","type":"ui_text","z":"86c1f8e1.623368","group":"c13ff9e7.c46968","order":1,"width":0,"height":0,"name":"Org ID","label":"Org ID","format":"{{msg.payload}}","layout":"row-spread","x":650,"y":160,"wires":[]},{"id":"b4e69651.afa1a8","type":"ui_text","z":"86c1f8e1.623368","group":"c13ff9e7.c46968","order":2,"width":0,"height":0,"name":"Net ID","label":"Net ID","format":"{{msg.payload}}","layout":"row-spread","x":1250,"y":340,"wires":[]},{"id":"844fa8b4.351a98","type":"ui_dropdown","z":"86c1f8e1.623368","name":"","label":"Network Selector","group":"c13ff9e7.c46968","order":4,"width":0,"height":0,"passthru":true,"options":[{"label":"","value":"","type":"str"}],"payload":"","topic":"","x":770,"y":340,"wires":[["1b67e4d8.a6981b","dd59810c.e835f"]]},{"id":"31ef8cb2.48e424","type":"function","z":"86c1f8e1.623368","name":"format selector","func":"\ncontext.flow.networks = msg.payload;\n\nfunction getFields(input, field) {\n    var output = [];\n    for (var i=0; i < input.length ; ++i)\n        output.push(input[i][field]);\n    return output;\n}\n\nvar result = getFields(msg.payload, \"name\");\n\n\nmsg.options = result;\n//msg.payload = flow.get('networks');\nmsg.payload = \"\";\nreturn msg;","outputs":1,"noerr":0,"x":460,"y":340,"wires":[["844fa8b4.351a98","cef7e868.06ad28","d9ca55e1.a12528","9ff546c5.0073e8"]]},{"id":"cef7e868.06ad28","type":"debug","z":"86c1f8e1.623368","name":"network selector options","active":true,"console":"false","complete":"options","x":710,"y":380,"wires":[]},{"id":"d9ca55e1.a12528","type":"debug","z":"86c1f8e1.623368","name":"network selector payload","active":true,"console":"false","complete":"payload","x":711.5,"y":414,"wires":[]},{"id":"2cbf15d3.e1d23a","type":"json","z":"86c1f8e1.623368","name":"","x":290,"y":340,"wires":[["31ef8cb2.48e424"]]},{"id":"dd59810c.e835f","type":"function","z":"86c1f8e1.623368","name":"get network id and set context","func":"//msg.payload = context.flow.networks;\n\nvar networkName = msg.payload;\nvar networkId = 0;\nvar networkList = context.flow.networks;\n\nnetworkList.forEach(function(network){\n    if(network.name == networkName){\n        networkId = network.id;\n    }\n});\nmsg.payload = networkId;\ncontext.flow.networkId = networkId;\n\n//getElementById(msg.payload).value\nreturn msg;","outputs":1,"noerr":0,"x":1050,"y":340,"wires":[["2b6f3730.b6ec18","b4e69651.afa1a8","b042b053.cf3a"]]},{"id":"1b67e4d8.a6981b","type":"debug","z":"86c1f8e1.623368","name":"network selector choice","active":true,"console":"false","complete":"payload","x":1010,"y":380,"wires":[]},{"id":"9ff546c5.0073e8","type":"debug","z":"86c1f8e1.623368","name":"network selector payload","active":true,"console":"false","complete":"payload","x":710,"y":460,"wires":[]},{"id":"2b6f3730.b6ec18","type":"debug","z":"86c1f8e1.623368","name":"network selector choice ID","active":true,"console":"false","complete":"payload","x":1000,"y":420,"wires":[]},{"id":"f145869d.a2efe8","type":"ui_text_input","z":"86c1f8e1.623368","name":"","label":"orgId","group":"c13ff9e7.c46968","order":3,"width":0,"height":0,"passthru":true,"mode":"text","delay":"0","topic":"","x":90,"y":160,"wires":[["d4d98bba.02a088"]]},{"id":"14207306.5b762d","type":"inject","z":"86c1f8e1.623368","name":"Set Org ID","topic":"","payload":"Enter your organization ID","payloadType":"str","repeat":"","crontab":"","once":true,"x":100,"y":120,"wires":[["f145869d.a2efe8"]]},{"id":"d689e0db.f92a8","type":"http request","z":"86c1f8e1.623368","name":"","method":"GET","ret":"txt","url":"","tls":"","x":530,"y":576,"wires":[["aaae0d6c.e8048","d88cd72a.f361c8"]]},{"id":"b042b053.cf3a","type":"function","z":"86c1f8e1.623368","name":"set headers and url","func":"msg.headers = {\n    \"X-Cisco-Meraki-API-Key\":flow.get('apiKey')\n}\n\nvar networkId = context.flow.networkId;\n\nmsg.url = \"https://dashboard.meraki.com/api/v0/networks/\"+networkId+\"/devices\";\nreturn msg;","outputs":1,"noerr":0,"x":310,"y":560,"wires":[["d689e0db.f92a8"]]},{"id":"13185648.333aea","type":"inject","z":"86c1f8e1.623368","name":"List Devices","topic":"","payload":"306267","payloadType":"num","repeat":"","crontab":"","once":false,"x":110,"y":576,"wires":[["b042b053.cf3a"]]},{"id":"aaae0d6c.e8048","type":"debug","z":"86c1f8e1.623368","name":"Device List","active":true,"console":"false","complete":"payload","x":750,"y":576,"wires":[]},{"id":"5904cc7d.bdf7f4","type":"ui_button","z":"86c1f8e1.623368","name":"","group":"307b3b6d.4982e4","order":0,"width":0,"height":0,"label":"List Devices","color":"","icon":"","payload":"","payloadType":"str","topic":"","x":110,"y":620,"wires":[["b042b053.cf3a"]]},{"id":"29f4b79.b041848","type":"function","z":"86c1f8e1.623368","name":"Store and shift msg","func":"\n\n\n// initialise the counter to 0 if it doesn't exist already\nvar text = context.get('text')|| [];\n\ntext.push(msg);\nif (text.length > 20){\n    text.shift();\n    text.length = 20;\n} \n\n// store the value back\ncontext.set('text',text);\n// make it part of the outgoing msg object\nmsg = {};\nmsg.payload = text;\nreturn msg;\n","outputs":1,"noerr":0,"x":590,"y":660,"wires":[["c4c489e8.3b5468"]]},{"id":"c4c489e8.3b5468","type":"ui_template","z":"86c1f8e1.623368","group":"b10ad37f.42f37","name":"API Output","order":1,"width":"6","height":"10","format":"<ul>\n <li ng-repeat=\"x in msg.payload\">\n <font color=\"red\">{{x.topic}}</font>\n    <ul>\n        <li>{{x.payload}}</li>\n    </ul>\n </li>\n</ul>","storeOutMessages":true,"fwdInMessages":true,"x":830,"y":660,"wires":[[]]},{"id":"e5d13ccf.09b0c","type":"function","z":"86c1f8e1.623368","name":"Store and shift msg","func":"\n\n\n// initialise the counter to 0 if it doesn't exist already\nvar text = context.get('text')|| [];\n\ntext.push(msg);\nif (text.length > 20){\n    text.shift();\n    text.length = 20;\n} \n\n// store the value back\ncontext.set('text',text);\n// make it part of the outgoing msg object\nmsg = {};\nmsg.payload = text;\nreturn msg;\n","outputs":1,"noerr":0,"x":590,"y":700,"wires":[[]]},{"id":"d88cd72a.f361c8","type":"ui_template","z":"86c1f8e1.623368","group":"ceb8883d.cfdd58","name":"","order":1,"width":"6","height":"10","format":"<ul>\n <li ng-repeat=\"x in msg.payload\">\n <font color=\"red\">{{x.mac}}</font>\n    <ul>\n        <li>{{x.manufacturer}}</li>\n    </ul>\n </li>\n</ul>\n\nraw\n\n{{x.payload}}","storeOutMessages":true,"fwdInMessages":true,"x":820,"y":700,"wires":[[]]},{"id":"ee79fd24.9dfee","type":"http in","z":"4549e9a6.7a7c28","name":"","url":"/test","method":"post","swaggerDoc":"","x":77.5,"y":42,"wires":[["c1c78233.af574","5e003805.eb0f08"]]},{"id":"c1c78233.af574","type":"function","z":"4549e9a6.7a7c28","name":"Set Status Code 201","func":"msg.statusCode = 201;\nmsg.payload = msg.req.body;\n\nreturn msg;","outputs":1,"noerr":0,"x":316.5,"y":41,"wires":[["19800488.e0868b","5dc30234.fd7a8c"]]},{"id":"19800488.e0868b","type":"http response","z":"4549e9a6.7a7c28","name":"","x":494.5,"y":40,"wires":[]},{"id":"5e003805.eb0f08","type":"debug","z":"4549e9a6.7a7c28","name":"","active":true,"console":"false","complete":"true","x":266.5,"y":122,"wires":[]},{"id":"5dc30234.fd7a8c","type":"debug","z":"4549e9a6.7a7c28","name":"req.body.payload","active":true,"console":"false","complete":"payload","x":578,"y":114,"wires":[]},{"id":"2f7f0cb0.cf5a44","type":"ui_form","z":"4549e9a6.7a7c28","name":"","label":"","group":"d949eee9.84d98","order":1,"width":0,"height":0,"options":[{"label":"Name","value":"name","type":"text","required":true},{"label":"Email","value":"email","type":"email","required":true},{"label":"Group","value":"group","type":"number","required":true}],"formValue":{"name":"","email":"","group":""},"payload":"","topic":"","x":111.5,"y":234,"wires":[["ec8b5c88.dfece","bfc0f0e9.7da88"]]},{"id":"ec8b5c88.dfece","type":"debug","z":"4549e9a6.7a7c28","name":"Form","active":true,"console":"false","complete":"payload","x":161.5,"y":276,"wires":[]},{"id":"bfc0f0e9.7da88","type":"function","z":"4549e9a6.7a7c28","name":"format API call","func":"var API_KEY = \"be647eed3046542a895ea9ad07b7f7cef4c002de\";\nvar ORG_ID = \"306267\";\n\nmsg.method = \"POST\";\nmsg.url = \"https://n143.meraki.com/api/v0/organizations/\"+ORG_ID+\"/admins\";\nmsg.headers = {\n    \"x-cisco-meraki-api-key\": API_KEY\n};\n\nmsg.payload = {\n    name: msg.payload.name,\n    email: msg.payload.email,\n    orgAccess: \"full\"\n};\n\n\nreturn msg;","outputs":1,"noerr":0,"x":295.5,"y":234,"wires":[["3ed3b525.3d914a","ec2fdb1c.7c2b88"]]},{"id":"3ed3b525.3d914a","type":"http request","z":"4549e9a6.7a7c28","name":"","method":"use","ret":"obj","url":"","tls":"","x":484.5,"y":234,"wires":[["69b26682.092b08","bb7eed88.10f34","32ed573f.12bc08","e3e9f652.bf6bc8"]]},{"id":"ec2fdb1c.7c2b88","type":"debug","z":"4549e9a6.7a7c28","name":"format API ","active":true,"console":"false","complete":"true","x":470,"y":276,"wires":[]},{"id":"69b26682.092b08","type":"ui_text","z":"4549e9a6.7a7c28","group":"771f8ab0.2dbef4","order":3,"width":"5","height":"5","name":"","label":"Response","format":"{{msg.payload}}","layout":"row-spread","x":460.5,"y":328,"wires":[]},{"id":"bb7eed88.10f34","type":"ui_text","z":"4549e9a6.7a7c28","group":"771f8ab0.2dbef4","order":2,"width":0,"height":0,"name":"","label":"Status Code","format":"{{msg.statusCode}}","layout":"row-spread","x":469,"y":367,"wires":[]},{"id":"32ed573f.12bc08","type":"debug","z":"4549e9a6.7a7c28","name":"API response","active":true,"console":"false","complete":"payload","x":655.5,"y":276,"wires":[]},{"id":"2a5a7053.d9827","type":"ui_ui_control","z":"4549e9a6.7a7c28","name":"ui control","x":453.5,"y":426,"wires":[[]]},{"id":"e3e9f652.bf6bc8","type":"function","z":"4549e9a6.7a7c28","name":"Update UI Tab","func":"msg.payload = {tab:\"Success\"};\nreturn msg;","outputs":1,"noerr":0,"x":297.5,"y":421,"wires":[["2a5a7053.d9827"]]},{"id":"127254f9.47575b","type":"function","z":"6a68a446.ef7fdc","name":"Org and Lab rotation","func":"// This script rotates through the available \n// orgs and then the available networks.\n\ncontext.countOrg = context.countOrg || 0;\n//context.orgs = 1; // total number of orgs in array\ncontext.orgs = msg.totalOrgs;\n//context.labs = 15; // total number of labs available\ncontext.labs = msg.totalLabs;\n\ncontext.lab = context.lab || [];\ncontext.lab[0] = context.lab[0] || 0;\n\n\n// increment org\nif(context.countOrg < context.orgs){\n    msg.org = context.countOrg;\n}else{\n    context.countOrg = 0;\n    msg.org = context.countOrg;\n}\ncontext.countOrg++;\n\n// increment lab\nif(context.lab[msg.org] < context.labs){\n    msg.lab = context.lab[msg.org];\n}else{\n    context.lab[msg.org] = 0;\n    msg.lab = context.lab[msg.org];\n}\ncontext.lab[msg.org]++;\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":338.765625,"y":358.75,"wires":[["eb793d49.e088","b463d70c.eece58"]]},{"id":"5f1493a3.f2c9ec","type":"inject","z":"6a68a446.ef7fdc","name":"Register","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":134.265625,"y":310.74999809265137,"wires":[["b5021456.997d08"]]},{"id":"eb793d49.e088","type":"debug","z":"6a68a446.ef7fdc","name":"Rotate labs","active":true,"console":"false","complete":"true","x":621.265625,"y":357.74999809265137,"wires":[]},{"id":"b5021456.997d08","type":"function","z":"6a68a446.ef7fdc","name":"Lab Defaults","func":"\n// Enter your API Key and Org IDs\nvar API_KEY = \"be647eed3046542a895ea9ad07b7f7cef4c002de\";\n//var ORG_ID = [\"215332\",\"351024\"];\nvar totalLabs = 15; //number of labs to create\nvar ORGS = [\n    {\n        id: \"215332\",\n        shard: \"n106\",\n    },\n    {\n        id: \"351024\",\n        shard: \"n196\",\n    }\n];\n\nmsg.apiKey = API_KEY;\nmsg.totalOrgs = ORGS.length; //- 1;\nmsg.totalLabs = totalLabs;\nmsg.orgs = ORGS;\n\nreturn msg;\n    \n    ","outputs":1,"noerr":0,"x":444.765625,"y":298.74999237060547,"wires":[["127254f9.47575b"]]},{"id":"b463d70c.eece58","type":"function","z":"6a68a446.ef7fdc","name":"Create Meraki Admin - API ","func":"msg.shard = msg.orgs[msg.org]['shard'];\nmsg.orgId = msg.orgs[msg.org]['id'];\n\n\nmsg.method = \"POST\";\nmsg.url = \"https://\"+msg.shard+\".meraki.com/api/v0/organizations/\"+msg.orgId+\"/admins\";\nmsg.headers = {\n    \"x-cisco-meraki-api-key\": msg.apiKey\n};\n\nmsg.payload = {\n    name: msg.payload.name,\n    email: msg.payload.email,\n    orgAccess: \"full\"\n};\n\n\nreturn msg;","outputs":1,"noerr":0,"x":350.265625,"y":399.74999809265137,"wires":[["e777630c.daee8","f482278c.cfc7f8"]]},{"id":"e777630c.daee8","type":"debug","z":"6a68a446.ef7fdc","name":"Create API Call","active":true,"console":"false","complete":"payload","x":629.265625,"y":399.74999809265137,"wires":[]},{"id":"a1ec68e2.49eef8","type":"http in","z":"6a68a446.ef7fdc","name":"","url":"/api-registration-submit","method":"post","swaggerDoc":"","x":180.265625,"y":240.79544067382812,"wires":[["b5021456.997d08"]]},{"id":"f482278c.cfc7f8","type":"function","z":"6a68a446.ef7fdc","name":"Simple triggered queue","func":"// if queue doesn't exist, create it\ncontext.queue = context.queue || [];\ncontext.busy = context.busy || false;\n\n// if the msg is a trigger one release next message\nif (msg.hasOwnProperty(\"trigger\")) {\n    if (context.queue.length > 0) {\n        var m = context.queue.shift();\n        return {payload:m};\n    }\n    else {\n        context.busy = false;\n    }\n}\nelse {\n    if (context.busy) {\n        // if busy add to queue\n        context.queue.push(msg.payload);\n    }\n    else {\n        // otherwise we are empty so just pass through and set busy flag\n        context.busy = true;\n        return msg;\n    }\n}\n\nreturn null;","outputs":1,"noerr":0,"x":340.265625,"y":437.74999809265137,"wires":[["f2452ebc.deff5","aab4577b.a8dfb8"]]},{"id":"f2452ebc.deff5","type":"http request","z":"6a68a446.ef7fdc","name":"","method":"use","ret":"obj","url":"","tls":"","x":623.462646484375,"y":436.90157890319824,"wires":[["74f5d28d.b58fdc","2e420166.c7e0ae","8cba1563.9d1568"]]},{"id":"2e420166.c7e0ae","type":"function","z":"6a68a446.ef7fdc","name":"set trigger","func":"// handle the return from the exec in here \n// if all is good then set msg.trigger property to exist\nmsg.trigger = 1;\nreturn msg;","outputs":1,"noerr":0,"x":290.17474365234375,"y":473.2045269012451,"wires":[["f482278c.cfc7f8","61d73de6.672cb4"]]},{"id":"74f5d28d.b58fdc","type":"debug","z":"6a68a446.ef7fdc","name":"Meraki API response","active":true,"console":"false","complete":"true","x":655.7352905273438,"y":477.81066703796387,"wires":[]},{"id":"61d73de6.672cb4","type":"debug","z":"6a68a446.ef7fdc","name":"","active":false,"console":"false","complete":"trigger","x":442.508056640625,"y":479.7803325653076,"wires":[]},{"id":"6934e704.522848","type":"http response","z":"6a68a446.ef7fdc","name":"","x":747.765625,"y":671.7499923706055,"wires":[]},{"id":"19d403ec.52f92c","type":"template","z":"6a68a446.ef7fdc","name":"HTML - Success","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"\n<!DOCTYPE html>\n<html>\n    <head>\n        <style>{{style}}</style>\n        <!-- Latest compiled and minified CSS -->\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n\n\n    </head>\n<body>\n<div class=\"col-md-4 col-md-offset-4\">\n<h2>Thanks {{payload.name}}, have fun with the lab!</h2>\n\n<div class=\"form\">\n<p>An email from Meraki will be sent to <b>{{payload.email}}</b> with instructions to finish\nyour account setup. If you use the same email that you already manage Meraki networks with,\njust login as usual. You will be prompted to accept your new organization privledges.</p>\n\n<h2><a href=\"https://cisco.box.com/s/c07f2gdaf44gi6twb3tkskxipb0ki8xy\" target=\"_blank\">Lab Guide</a></h2>\n<h3>Lab #{{lab}}</h3>\n<i>This will be your default Meraki network to work with. </i>\n</div>\n</div>\n\n<div class=\"col-md-4 col-md-offset-4\">\n<i>The Meraki API was used to create your account. Meraki Magic!</i>\n<div class=\"col-md-4 col-md-offset-4\">\n\n</body>\n</html>","x":575.765625,"y":671.7499923706055,"wires":[["6934e704.522848"]]},{"id":"6f20be76.15ff2","type":"switch","z":"6a68a446.ef7fdc","name":"Success/Fail","property":"statusCode","propertyType":"msg","rules":[{"t":"eq","v":"201","vt":"num"},{"t":"else"}],"checkall":"true","outputs":2,"x":235.78082275390625,"y":693.0530319213867,"wires":[["b6b6eb76.1f36f8","27a6e683.41810a"],["7df00237.29145c"]]},{"id":"2bbeca70.c21116","type":"http response","z":"6a68a446.ef7fdc","name":"","x":750.4321899414062,"y":722.4166793823242,"wires":[]},{"id":"23d15aba.68b3a6","type":"template","z":"6a68a446.ef7fdc","name":"HTML - Fail","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!DOCTYPE html>\n<html>\n    <head>\n        <style>{{style}}</style>\n     <!-- Latest compiled and minified CSS -->\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n\n    \n    \n    </head>\n<body>\n\n<div class=\"col-md-4 col-md-offset-4\">\n<h1>There was a problem with your submission.</h1>\n{{payload.errors}}\n\n<p>Status Code: {{statusCode}}</p>\n\n<h3>Please <a href=\"/api-registration\">try again</a></h3>\n</div>\n\n</body>\n</html>","x":555.4322509765625,"y":723.4166793823242,"wires":[["2bbeca70.c21116"]]},{"id":"8cba1563.9d1568","type":"function","z":"6a68a446.ef7fdc","name":"filter object","func":"var payload = msg.payload;\nvar res = msg.res;\nvar status = msg.statusCode;\nvar lab = flow.get('lab');\nmsg = {};\nmsg.payload = payload;\nmsg.res = res;\nmsg.statusCode = status;\nmsg.lab = lab + 1;// offset converting array to normal\nreturn msg;","outputs":1,"noerr":0,"x":236.417236328125,"y":639.6591110229492,"wires":[["6f20be76.15ff2","2f82cdc1.4c61c2"]]},{"id":"dc18bee3.3dd28","type":"comment","z":"6a68a446.ef7fdc","name":"Results","info":"","x":175.265625,"y":574.7499675750732,"wires":[]},{"id":"2f82cdc1.4c61c2","type":"debug","z":"6a68a446.ef7fdc","name":"filter","active":true,"console":"false","complete":"lab","x":410.265625,"y":628.7499923706055,"wires":[]},{"id":"40d763fc.d8f5fc","type":"http in","z":"6a68a446.ef7fdc","name":"","url":"/api-registration","method":"get","swaggerDoc":"","x":150.265625,"y":140.79544067382812,"wires":[["ff03b61.cf27a48"]]},{"id":"ee4f465e.9f7d28","type":"http response","z":"6a68a446.ef7fdc","name":"","x":646.5534934997559,"y":217.62877750396729,"wires":[]},{"id":"86c5f244.68d5f","type":"comment","z":"6a68a446.ef7fdc","name":"Meraki API Workshop Registration Form","info":"Example: localhost:1880/api-registration","x":215.3868408203125,"y":71.79544067382812,"wires":[]},{"id":"6300fd8e.034744","type":"template","z":"6a68a446.ef7fdc","name":"HTML","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"\n\n<script>{{script}}</script>\n<style>{{style}}</style>\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n\n<div class=\"col-md-4 col-md-offset-4\">\n<center><h1>Meraki API Workshop</h1></center>\n<!-- Form Name -->\n<div class=\"well\">\n    <p>Pease complete this form to receive an administrator account to the virtual lab.</p>\n    <p>An email will be sent from Meraki with instructions to complete your account setup.</p>\n</div>\n\n<div class=\"login-page\">\n  <div class=\"form\">\n    <form class=\"register-form\" action=\"{{url}}\" method=\"post\">\n      <input type=\"text\" placeholder=\"name\" name=\"name\" required=true/>\n      <input type=\"email\" placeholder=\"email\" name=\"email\" required=true/>\n      <button>Register</button>\n      <p class=\"message\">Already registered? <a href=\"https://cisco.app.box.com/s/c07f2gdaf44gi6twb3tkskxipb0ki8xy\">Lab Guide</a></p>\n    </form>\n\n  </div>\n</div>\n</div>\n","x":399.1443786621094,"y":216.85604858398438,"wires":[["ee4f465e.9f7d28"]]},{"id":"ff03b61.cf27a48","type":"function","z":"6a68a446.ef7fdc","name":"POST URL: \"api-registration-submit\";","func":"msg.url = \"api-registration-submit\";\nreturn msg;","outputs":1,"noerr":0,"x":497.59893798828125,"y":104.21968078613281,"wires":[["2ec2e55c.8f989a"]]},{"id":"420d6052.53d8","type":"comment","z":"6a68a446.ef7fdc","name":"UPDATE ME ! !","info":"","x":442.765625,"y":261.24999237060547,"wires":[]},{"id":"de6f6b9b.fc6de8","type":"template","z":"6a68a446.ef7fdc","name":"CSS","field":"style","fieldType":"msg","format":"css","syntax":"mustache","template":"@import url(https://fonts.googleapis.com/css?family=Roboto:300);\n.message {\n  position: relative;\n  z-index: 1;\n  background: #FFFFFF;\n  max-width: 360px;\n  margin: 0 auto 100px;\n  padding: 15px;\n  text-align: center;\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);\n}\n\n.form {\n  position: relative;\n  z-index: 1;\n  background: #FFFFFF;\n  max-width: 360px;\n  margin: 0 auto 100px;\n  padding: 45px;\n  text-align: center;\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);\n}\n.form input {\n  font-family: \"Roboto\", sans-serif;\n  outline: 0;\n  background: #f2f2f2;\n  width: 100%;\n  border: 0;\n  margin: 0 0 15px;\n  padding: 15px;\n  box-sizing: border-box;\n  font-size: 14px;\n}\n.form button {\n  font-family: \"Roboto\", sans-serif;\n  text-transform: uppercase;\n  outline: 0;\n  background: #4CAF50;\n  width: 100%;\n  border: 0;\n  padding: 15px;\n  color: #FFFFFF;\n  font-size: 14px;\n  -webkit-transition: all 0.3 ease;\n  transition: all 0.3 ease;\n  cursor: pointer;\n}\n.form button:hover,.form button:active,.form button:focus {\n  background: #43A047;\n}\n.form .message {\n  margin: 15px 0 0;\n  color: #b3b3b3;\n  font-size: 12px;\n}\n.form .message a {\n  color: #4CAF50;\n  text-decoration: none;\n}\n.form .register-form {\n  display: auto;\n}\n.container {\n  position: relative;\n  z-index: 1;\n  max-width: 300px;\n  margin: 0 auto;\n}\n.container:before, .container:after {\n  content: \"\";\n  display: block;\n  clear: both;\n}\n.container .info {\n  margin: 50px auto;\n  text-align: center;\n}\n.container .info h1 {\n  margin: 0 0 15px;\n  padding: 0;\n  font-size: 36px;\n  font-weight: 300;\n  color: #1a1a1a;\n}\n.container .info span {\n  color: #4d4d4d;\n  font-size: 12px;\n}\n.container .info span a {\n  color: #000000;\n  text-decoration: none;\n}\n.container .info span .fa {\n  color: #EF3B3A;\n}\nbody {\n  background: #76b852; /* fallback for old browsers */\n  background: -webkit-linear-gradient(right, #76b852, #8DC26F);\n  background: -moz-linear-gradient(right, #76b852, #8DC26F);\n  background: -o-linear-gradient(right, #76b852, #8DC26F);\n  background: linear-gradient(to left, #76b852, #8DC26F);\n  font-family: \"Roboto\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;      \n}","x":398.765625,"y":177.24999237060547,"wires":[["6300fd8e.034744"]]},{"id":"2ec2e55c.8f989a","type":"template","z":"6a68a446.ef7fdc","name":"JavaScript","field":"script","fieldType":"msg","format":"css","syntax":"mustache","template":"$('.message a').click(function(){\n   $('form').animate({height: \"toggle\", opacity: \"toggle\"}, \"slow\");\n});","x":422.265625,"y":144.24999237060547,"wires":[["de6f6b9b.fc6de8"]]},{"id":"b6b6eb76.1f36f8","type":"template","z":"6a68a446.ef7fdc","name":"CSS","field":"style","fieldType":"msg","format":"css","syntax":"mustache","template":"@import url(https://fonts.googleapis.com/css?family=Roboto:300);\n\n\n.form {\n  position: relative;\n  z-index: 1;\n  background: #FFFFFF;\n  max-width: 360px;\n  margin: 0 auto 100px;\n  padding: 45px;\n  text-align: center;\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);\n}\n.form input {\n  font-family: \"Roboto\", sans-serif;\n  outline: 0;\n  background: #f2f2f2;\n  width: 100%;\n  border: 0;\n  margin: 0 0 15px;\n  padding: 15px;\n  box-sizing: border-box;\n  font-size: 14px;\n}\n.form button {\n  font-family: \"Roboto\", sans-serif;\n  text-transform: uppercase;\n  outline: 0;\n  background: #4CAF50;\n  width: 100%;\n  border: 0;\n  padding: 15px;\n  color: #FFFFFF;\n  font-size: 14px;\n  -webkit-transition: all 0.3 ease;\n  transition: all 0.3 ease;\n  cursor: pointer;\n}\n.form button:hover,.form button:active,.form button:focus {\n  background: #43A047;\n}\n.form .message {\n  margin: 15px 0 0;\n  color: #b3b3b3;\n  font-size: 12px;\n}\n.form .message a {\n  color: #4CAF50;\n  text-decoration: none;\n}\n.form .register-form {\n  display: auto;\n}\n.container {\n  position: relative;\n  z-index: 1;\n  max-width: 300px;\n  margin: 0 auto;\n}\n.container:before, .container:after {\n  content: \"\";\n  display: block;\n  clear: both;\n}\n.container .info {\n  margin: 50px auto;\n  text-align: center;\n}\n.container .info h1 {\n  margin: 0 0 15px;\n  padding: 0;\n  font-size: 36px;\n  font-weight: 300;\n  color: #1a1a1a;\n}\n.container .info span {\n  color: #4d4d4d;\n  font-size: 12px;\n}\n.container .info span a {\n  color: #000000;\n  text-decoration: none;\n}\n.container .info span .fa {\n  color: #EF3B3A;\n}\nbody {\n  background: #76b852; /* fallback for old browsers */\n  background: -webkit-linear-gradient(right, #76b852, #8DC26F);\n  background: -moz-linear-gradient(right, #76b852, #8DC26F);\n  background: -o-linear-gradient(right, #76b852, #8DC26F);\n  background: linear-gradient(to left, #76b852, #8DC26F);\n  font-family: \"Roboto\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;      \n}","x":389.265625,"y":674.2499923706055,"wires":[["19d403ec.52f92c"]]},{"id":"7df00237.29145c","type":"template","z":"6a68a446.ef7fdc","name":"CSS","field":"style","fieldType":"msg","format":"css","syntax":"mustache","template":"@import url(https://fonts.googleapis.com/css?family=Roboto:300);\n\n\n.form {\n  position: relative;\n  z-index: 1;\n  background: #FFFFFF;\n  max-width: 360px;\n  margin: 0 auto 100px;\n  padding: 45px;\n  text-align: center;\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);\n}\n.form input {\n  font-family: \"Roboto\", sans-serif;\n  outline: 0;\n  background: #f2f2f2;\n  width: 100%;\n  border: 0;\n  margin: 0 0 15px;\n  padding: 15px;\n  box-sizing: border-box;\n  font-size: 14px;\n}\n.form button {\n  font-family: \"Roboto\", sans-serif;\n  text-transform: uppercase;\n  outline: 0;\n  background: #4CAF50;\n  width: 100%;\n  border: 0;\n  padding: 15px;\n  color: #FFFFFF;\n  font-size: 14px;\n  -webkit-transition: all 0.3 ease;\n  transition: all 0.3 ease;\n  cursor: pointer;\n}\n.form button:hover,.form button:active,.form button:focus {\n  background: #43A047;\n}\n.form .message {\n  margin: 15px 0 0;\n  color: #b3b3b3;\n  font-size: 12px;\n}\n.form .message a {\n  color: #4CAF50;\n  text-decoration: none;\n}\n.form .register-form {\n  display: auto;\n}\n.container {\n  position: relative;\n  z-index: 1;\n  max-width: 300px;\n  margin: 0 auto;\n}\n.container:before, .container:after {\n  content: \"\";\n  display: block;\n  clear: both;\n}\n.container .info {\n  margin: 50px auto;\n  text-align: center;\n}\n.container .info h1 {\n  margin: 0 0 15px;\n  padding: 0;\n  font-size: 36px;\n  font-weight: 300;\n  color: #1a1a1a;\n}\n.container .info span {\n  color: #4d4d4d;\n  font-size: 12px;\n}\n.container .info span a {\n  color: #000000;\n  text-decoration: none;\n}\n.container .info span .fa {\n  color: #EF3B3A;\n}\nbody {\n  background: #76b852; /* fallback for old browsers */\n  background: -webkit-linear-gradient(right, #76b852, #8DC26F);\n  background: -moz-linear-gradient(right, #76b852, #8DC26F);\n  background: -o-linear-gradient(right, #76b852, #8DC26F);\n  background: linear-gradient(to left, #76b852, #8DC26F);\n  font-family: \"Roboto\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;      \n}","x":390.265625,"y":725.2499923706055,"wires":[["23d15aba.68b3a6"]]},{"id":"68ab84c9.8be17c","type":"mongodb out","z":"6a68a446.ef7fdc","mongodb":"7f0dc219.b46b0c","name":"","collection":"apiSEworkshop","payonly":true,"upsert":false,"multi":false,"operation":"store","x":619.765625,"y":785.2499923706055,"wires":[]},{"id":"27a6e683.41810a","type":"function","z":"6a68a446.ef7fdc","name":"Retrieve state info","func":"\nmsg.payload = {\n    \"name\" : flow.get('name'),\n    \"email\" : flow.get('email'),\n    \"orgId\" : flow.get('orgId'),\n    \"lab\" : flow.get('lab'),\n    \"url\": flow.get('url'),\n    \"date\": flow.get('date')\n};\nreturn msg;","outputs":1,"noerr":0,"x":262.765625,"y":818.2499923706055,"wires":[["68ab84c9.8be17c","90d33c94.8633a"]]},{"id":"6d0f029c.d9e43c","type":"http response","z":"6a68a446.ef7fdc","name":"","x":729.765625,"y":872.2499923706055,"wires":[]},{"id":"1266949e.bd96cb","type":"comment","z":"6a68a446.ef7fdc","name":"Log Registrations","info":"","x":194.765625,"y":779.2499923706055,"wires":[]},{"id":"552f8ba3.bfed44","type":"function","z":"6a68a446.ef7fdc","name":"Find All","func":"msg.payload = {};\nreturn msg;","outputs":1,"noerr":0,"x":380.765625,"y":872.2499923706055,"wires":[["5efb777f.6694f8"]]},{"id":"742493a5.9d024c","type":"http in","z":"6a68a446.ef7fdc","name":"","url":"/registration-data","method":"get","swaggerDoc":"","x":150.765625,"y":874.2499923706055,"wires":[["552f8ba3.bfed44"]]},{"id":"5efb777f.6694f8","type":"mongodb2 in","z":"6a68a446.ef7fdc","service":"_ext_","configNode":"a8438bf.8f8c878","name":"","collection":"apiSEworkshop","operation":"find.toArray","x":554.765625,"y":914.2499923706055,"wires":[["6d0f029c.d9e43c"]]},{"id":"aab4577b.a8dfb8","type":"function","z":"6a68a446.ef7fdc","name":"Set Flow State","func":"flow.set('name',msg.payload.name);\nflow.set('email',msg.payload.email);\nflow.set('lab',msg.lab);\nflow.set('orgId',msg.orgId); \nflow.set('url',msg.url); \nflow.set('date',new Date());\n\nreturn msg;","outputs":1,"noerr":0,"x":446.765625,"y":546.2499923706055,"wires":[["7debe99c.bfbf78"]]},{"id":"7debe99c.bfbf78","type":"debug","z":"6a68a446.ef7fdc","name":"Flow State","active":true,"console":"false","complete":"true","x":634.765625,"y":547.2499923706055,"wires":[]},{"id":"90d33c94.8633a","type":"debug","z":"6a68a446.ef7fdc","name":"Commit to MongoDB","active":true,"console":"false","complete":"payload","x":570.765625,"y":836.2499923706055,"wires":[]},{"id":"1324ba03.120c96","type":"inject","z":"6a68a446.ef7fdc","name":"DELETE ALL DATA","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":178.765625,"y":1120.2499923706055,"wires":[["5c3791c.21c6a7"]]},{"id":"b469405d.ed326","type":"mongodb2 in","z":"6a68a446.ef7fdc","service":"_ext_","configNode":"a8438bf.8f8c878","name":"","collection":"apiSEworkshop","operation":"deleteMany","x":614.765625,"y":1121.2499923706055,"wires":[["f9f92ab2.71dfe8"]]},{"id":"5c3791c.21c6a7","type":"function","z":"6a68a446.ef7fdc","name":"Find All","func":"msg.payload = {};\nreturn msg;","outputs":1,"noerr":0,"x":358.265625,"y":1122.2499923706055,"wires":[["b469405d.ed326"]]},{"id":"f9f92ab2.71dfe8","type":"debug","z":"6a68a446.ef7fdc","name":"Delete all MongoDB data","active":true,"console":"false","complete":"payload","x":710.765625,"y":1173.2499923706055,"wires":[]},{"id":"c9bbfda3.2961d","type":"comment","z":"6a68a446.ef7fdc","name":"Admin Utilities","info":"","x":121.765625,"y":1086.2499923706055,"wires":[]},{"id":"c8955a55.049798","type":"debug","z":"83680324.e61dc","name":"No match","active":false,"console":"false","complete":"true","x":556.265625,"y":226,"wires":[]},{"id":"d65f3fc1.048df","type":"debug","z":"83680324.e61dc","name":"Raw CMX debug","active":false,"console":"false","complete":"true","x":178.265625,"y":154,"wires":[]},{"id":"77ff230d.3053dc","type":"file","z":"83680324.e61dc","name":"logs/cmx.log","filename":"logs/cmx.log","appendNewline":true,"createDir":false,"overwriteFile":"false","x":1021.265625,"y":122,"wires":[]},{"id":"192ef6ec.d09069","type":"debug","z":"83680324.e61dc","name":"Spark POST debug","active":true,"console":"false","complete":"true","x":1377.265625,"y":157,"wires":[]},{"id":"a3964801.4e09e8","type":"switch","z":"83680324.e61dc","name":"MAC address match","property":"payload","propertyType":"msg","rules":[{"t":"cont","v":"18:fe:34:ed:8b:ea","vt":"str"},{"t":"else"}],"checkall":"false","outputs":2,"x":443.265625,"y":80,"wires":[["f084e159.eb7de"],["2483b76.e488c48"]]},{"id":"67c13dc2.aa6714","type":"json","z":"83680324.e61dc","name":"","x":256.265625,"y":80,"wires":[["a3964801.4e09e8"]]},{"id":"2483b76.e488c48","type":"json","z":"83680324.e61dc","name":"","x":534.265625,"y":155,"wires":[["c8955a55.049798"]]},{"id":"f084e159.eb7de","type":"json","z":"83680324.e61dc","name":"","x":629.265625,"y":74,"wires":[["5ec81156.f6b49","6379cdb8.f3b884"]]},{"id":"5ec81156.f6b49","type":"function","z":"83680324.e61dc","name":"Build Spark params","func":"// This function parses the CMX data to construct\n// HTTP POST parameters for sending a Spark message to a room\nmap = msg.payload;\nclient = {}; //reset payload object for clarity\nclient.roomId = 'my_spark_room_id';\nif (map['version'] != '2.0'){\n msg.log = \"got post with unexpected version: #{map['version']}\";\n return msg;\n}else{\n msg.log = \"working with correct version\";\n}\nif (map['type'] != 'DevicesSeen'){\nmsg.log = \"got post for event that we're not interested in: #{map['type']}\";\nreturn msg;\n}\nvar o = map['data']['observations'];\nconsole.log('map.data.apMac = '+map.data['apMac']);\n for (var c in o){\n if (o.hasOwnProperty(c)) {\n if (!o[c]['location']){continue}\n console.log('map.data.observations.clientMac = '+o[c]['clientMac']);\n if (o[c]['clientMac'] === \"de:ad:00:00:be:ef\"){\n  apMac = map.data['apMac'];\n  rssi = o[c]['rssi'];\n  apTags = map.data['apTags'];\n  client.text = 'Client: Jason Bourne detected (rssi ' + rssi + 'dB) by AP tagged:' + apTags;\n }\n if (client.seenEpoch===null || client.seenEpoch === 0){continue}// # This probe is useless, so ignore it\n }\n}\nmsg.payload.body = client;\nreturn msg;","outputs":"1","noerr":0,"x":848.765625,"y":74,"wires":[["77ff230d.3053dc","a92f7e7b.1d0ab","e7d44717.d69e48"]]},{"id":"e7d44717.d69e48","type":"debug","z":"83680324.e61dc","name":"Spark POST params","active":true,"console":"false","complete":"true","x":953.265625,"y":160,"wires":[]},{"id":"6379cdb8.f3b884","type":"function","z":"83680324.e61dc","name":"Build Dashboard API call","func":"// This function creates HTTP GET parameters\n// for sending to the Meraki Dashboard\nmap = msg.payload;\napi_key = 'be647eed3046542a895ea9ad07b7f7cef4c002de';\ndashboard_header = {\n        'x-cisco-meraki-api-key': api_key,\n        'Content-Type': 'application/json'\n};\n\nmsg.headers = dashboard_header;\nmsg.ap_mac = map.data.apMac;\nmsg.payload = '';\nreturn msg;\n","outputs":1,"noerr":0,"x":820.265625,"y":225,"wires":[["567b072a.752768","3222d215.73476e"]]},{"id":"3222d215.73476e","type":"http request","z":"83680324.e61dc","name":"Dashboard GET","method":"GET","ret":"obj","url":"https://dashboard.meraki.com/api/v0/networks/L_643451796760560141/devices","tls":"","x":1073.765625,"y":226,"wires":[["f7b4942c.f34b38","b8a3cde6.c0404"]]},{"id":"f7b4942c.f34b38","type":"debug","z":"83680324.e61dc","name":"Dashboard Response","active":true,"console":"false","complete":"payload","x":1223.265625,"y":307,"wires":[]},{"id":"b8a3cde6.c0404","type":"function","z":"83680324.e61dc","name":"Find device name by mac","func":"// This function parses the Meraki Dashboard API response\n// and creates a message to POST to a Spark room.\n// Fill in the roomId & bot_token with your own details\nclient = {}; //reset payload object for clarity\nclient.roomId = 'my_spark_room_id';\nresult = msg.payload;\nap_mac = msg.ap_mac;\nconsole.log('AP MAC= ' + ap_mac);\nmsg.payload = {};\nfor (var key in result) {\n  if (result.hasOwnProperty(key)) {\n    var dev_mac = result[key].mac;\n    if (dev_mac === ap_mac) {\n      var dev_name = result[key].name;\n      client.text = 'Device name: ' + dev_name;\n  }\n }\n}\nmsg.payload.body = client;\nreturn msg;","outputs":1,"noerr":0,"x":1323.265625,"y":226,"wires":[["32db6f19.c73a1","4ff06cb9.63d2d4"]]},{"id":"567b072a.752768","type":"debug","z":"83680324.e61dc","name":"Dashboard GET params","active":true,"console":"false","complete":"true","x":937.265625,"y":305,"wires":[]},{"id":"32db6f19.c73a1","type":"debug","z":"83680324.e61dc","name":"find name function debug","active":true,"console":"false","complete":"true","x":1492.265625,"y":306,"wires":[]},{"id":"a92f7e7b.1d0ab","type":"Spark API","z":"83680324.e61dc","profileConfig":"2169c481.cdc6dc","apiUrl":"http://127.0.0.1:1880/api/cisco_spark_v1.json","resource":"Messages","method":"createMessage","name":"post cmx details","x":1277.265625,"y":74,"wires":[["192ef6ec.d09069"]]},{"id":"4ff06cb9.63d2d4","type":"Spark API","z":"83680324.e61dc","profileConfig":"2169c481.cdc6dc","apiUrl":"http://127.0.0.1:1880/api/cisco_spark_v1.json","resource":"Messages","method":"createMessage","name":"post device name","x":1418.765625,"y":400,"wires":[["181ac4eb.84b32b"]]},{"id":"181ac4eb.84b32b","type":"debug","z":"83680324.e61dc","name":"POST dev name","active":true,"console":"false","complete":"true","x":1530.265625,"y":476,"wires":[]},{"id":"7791d2a8.94d89c","type":"link in","z":"83680324.e61dc","name":"Meraki CMX","links":["9e341f2d.8dd0d"],"x":75.01953220367432,"y":68.99902725219727,"wires":[["d65f3fc1.048df","67c13dc2.aa6714"]]},{"id":"1f01a3b8.2d30dc","type":"comment","z":"83680324.e61dc","name":"Meraki CMX","info":"","x":97.51953125,"y":25.17578125,"wires":[]},{"id":"b90e8b10.78f418","type":"http in","z":"40be8841.72e518","name":"[post] /cmx2","url":"/cmx2","method":"post","swaggerDoc":"","x":117.20703125,"y":203.25,"wires":[["e835f936.0cdaa8","2b9cd657.9de59a"]]},{"id":"d0bb0afe.432dd8","type":"mongodb in","z":"40be8841.72e518","mongodb":"6b24c060.f9918","name":"cmx data","collection":"cmx","operation":"find","x":470.20703125,"y":345.25,"wires":[["213586fc.e5c58a"]]},{"id":"76b4f6ca.cfa3a8","type":"mongodb out","z":"40be8841.72e518","mongodb":"6b24c060.f9918","name":"cmx data","collection":"cmx","payonly":true,"upsert":false,"multi":false,"operation":"store","x":552.20703125,"y":294.25,"wires":[]},{"id":"213586fc.e5c58a","type":"http response","z":"40be8841.72e518","name":"cmx response","x":654.20703125,"y":344.25,"wires":[]},{"id":"eca71a86.13d8d8","type":"debug","z":"40be8841.72e518","name":"CMX Data","active":true,"console":"false","complete":"true","x":554.20703125,"y":222.25,"wires":[]},{"id":"3408aed2.e2c082","type":"http in","z":"40be8841.72e518","name":"[get] /cmx2 Validator","url":"/cmx2","method":"get","swaggerDoc":"","x":132.20703125,"y":94.25,"wires":[["f79bc765.e521d8","954ebfa1.a1e9c"]]},{"id":"f79bc765.e521d8","type":"function","z":"40be8841.72e518","name":"validate-validator","func":"// This node accepts a message with the validator defined in the URL\n// Example: http://yourserver:1880/cmx?validator=8e0846499d9a3f6d23f7868c4d55b9d6325035f5\n// By default, all API requests are accepted (for testing purposes)\n//~~~~~~~~~\nvalidator = msg.payload.validator;\nmsg.payload = validator;\nreturn msg;\n\n\n//Alternatively, set the validator variable to match the Meraki network\n//The URL will not need to include the validator string, for enhanced security\n//~~~~~~~~~\n//validator = \"8e0846499d9a3f6c23f7868c4c25b9d6325035f5\";\n//msg.payload = validator;\n//return msg;","outputs":1,"noerr":0,"x":327.20703125,"y":112.25,"wires":[["b1aac7db.6a11e8","cd84e58d.350698"]]},{"id":"b1aac7db.6a11e8","type":"http response","z":"40be8841.72e518","name":"cmx response","x":615.20703125,"y":100.25,"wires":[]},{"id":"954ebfa1.a1e9c","type":"debug","z":"40be8841.72e518","name":"CMX validator raw","active":false,"console":"false","complete":"payload","x":356.20703125,"y":63.25,"wires":[]},{"id":"5835bb6e.860824","type":"http in","z":"40be8841.72e518","name":"[get] /showcmx2","url":"/showcmx2","method":"get","swaggerDoc":"","x":124.20703125,"y":345.25,"wires":[["553ad3a7.1ecf5c"]]},{"id":"a2ff623e.40946","type":"http in","z":"40be8841.72e518","name":"[get] /showcmx2html","url":"/showcmxhtml","method":"get","swaggerDoc":"","x":152.20703125,"y":483.25,"wires":[["7a7f5ef9.b7ba8"]]},{"id":"7be14e1d.ae4e5","type":"template","z":"40be8841.72e518","name":"Parse Data","field":"payload","format":"handlebars","template":"\n{{#payload}}\n   <h1>data.apMac = {{data.apMac}}</h1>\n   {{#data.observations}}\n    <table border=\"1\" style=\"width:100%\">\n     <tr>\n     <td >{{@index}}</td>\n     <td width=\"300\">clientMac = {{clientMac}}</td>\n     <td width=\"300\">manufacturer = {{manufacturer}}</td>\n     <td width=\"300\">seenTime = {{seenTime}}</td>\n     <td width=\"300\">lat = {{location.lat}}</td>\n     <td width=\"300\">lng = {{location.lng}}</td>\n     <td width=\"300\">unc = {{location.unc}}</td>\n     <td width=\"300\">x = {{x}}</td>\n     <td width=\"300\">y = {{y}}</td>\n     </tr>\n    </table>\n\n    \n   {{/data.observations}}\n   <br>\n{{/payload}}\n\n\n","x":537.20703125,"y":483.25,"wires":[["3b1bd947.9f6ae6"]]},{"id":"3b1bd947.9f6ae6","type":"http response","z":"40be8841.72e518","name":"","x":679.20703125,"y":482.25,"wires":[]},{"id":"628369be.e32fa8","type":"mongodb in","z":"40be8841.72e518","mongodb":"6b24c060.f9918","name":"cmx data","collection":"cmx","operation":"find","x":380.95703125,"y":479.5,"wires":[["7be14e1d.ae4e5","4eea2e05.e7e69"]]},{"id":"396cf9e0.fd5096","type":"comment","z":"40be8841.72e518","name":"CMX in HTML table","info":"CMX in HTML table\n","x":117.20703125,"y":440.25,"wires":[]},{"id":"33efb0b0.db241","type":"comment","z":"40be8841.72e518","name":"CMX core functions","info":"CMX core functions","x":110.20703125,"y":51.25,"wires":[]},{"id":"7a7f5ef9.b7ba8","type":"function","z":"40be8841.72e518","name":"limit results","func":"msg.limit = 2;\nmsg.sort = {\"_id\":-1};\nreturn msg;","outputs":1,"noerr":0,"x":293.26468658447266,"y":410.05774688720703,"wires":[["628369be.e32fa8"]]},{"id":"4eea2e05.e7e69","type":"function","z":"40be8841.72e518","name":"Extract GPS","func":"var coords = [];\n\nfor (i = 0 ; i < msg.payload.length; i++) {\n     y = msg.payload[i];\n\n     for(j = 0; j < y.data.observations.length; j++) {\n        x = y.data.observations[j];\n        coords.push({\"lat\" : x.location.lat, \"lng\" : x.location.lng});\n    }\n}\n\nmsg.payload = coords;\nreturn msg;\n","outputs":1,"noerr":0,"x":486.630126953125,"y":550.4422912597656,"wires":[["d0025208.538fe"]]},{"id":"d0025208.538fe","type":"debug","z":"40be8841.72e518","name":"","active":false,"console":"true","complete":"payload","x":675.0147705078125,"y":551.7499389648438,"wires":[]},{"id":"553ad3a7.1ecf5c","type":"function","z":"40be8841.72e518","name":"limit results","func":"msg.limit = 2;\nmsg.sort = {\"_id\":-1};\nreturn msg;","outputs":1,"noerr":0,"x":309.20703125,"y":344.25,"wires":[["d0bb0afe.432dd8"]]},{"id":"5eb5ab9d.3a4b14","type":"comment","z":"40be8841.72e518","name":"CMX in JSON view","info":"","x":108.20703125,"y":303.25,"wires":[]},{"id":"cd84e58d.350698","type":"debug","z":"40be8841.72e518","name":"CMX Validator","active":true,"console":"false","complete":"payload","x":616.20703125,"y":139.25,"wires":[]},{"id":"e835f936.0cdaa8","type":"function","z":"40be8841.72e518","name":"validate-secret","func":"// This node verifies that the secrect configured\n// on the Meraki Dashboard Network, matches.\n//var secret = \"merakilous\"; \nvar secret = \"testing123\";\n\nif(msg.payload.secret == secret){\n    return msg;\n}else{\n    // Secret is invalid\n    \n}\n\n","outputs":1,"noerr":0,"x":320.20703125,"y":231.25,"wires":[["eca71a86.13d8d8","81a9d31f.ec133","76b4f6ca.cfa3a8"]]},{"id":"bbe3033e.3e06e","type":"comment","z":"40be8841.72e518","name":"Connect DB to function to store data","info":"","x":559.20703125,"y":259.25,"wires":[]},{"id":"2b9cd657.9de59a","type":"debug","z":"40be8841.72e518","name":"CMX post","active":false,"console":"false","complete":"payload","x":326.20703125,"y":166.25,"wires":[]},{"id":"81a9d31f.ec133","type":"http response","z":"40be8841.72e518","name":"cmx response","x":562.20703125,"y":184.25,"wires":[]},{"id":"439b0e12.fc7b7","type":"comment","z":"17ab7b4c.f6d865","name":"connect to enable","info":"","x":471,"y":336.13671875,"wires":[]},{"id":"81f2fe6a.8ce5f","type":"function","z":"669f5cc3.759de4","name":"Format Client - BLE","func":"// This function extracts the raw CMX data to create a consistent DB entry\nif(msg.payload === null){\n    return null;\n}\nvar map = msg.payload;\nclient = {}; //reset payload object for clarity\n\n\nif (map['version'] != '2.0'){\n    msg.log = \"got post with unexpected version: #{map['version']}\";\n    return msg;\n}else{\n    msg.log = \"working with correct version\";\n}\n/*\nif (map['type'] != 'DevicesSeen' || 'BluetoothDevicesSeen'){\nmsg.log = \"got post for event that we're not interested in: #{map['type']}\";\nreturn msg;\n}\n*/\n\nvar o = map['data']['observations'];\nconsole.log('map.data.apMac = '+map.data['apMac']);\n   for (var c in o){\n    if (o.hasOwnProperty(c)) {\n        //console.log(\"Key is \" + c + \", value is \" + o[c].location.lat);\n        if (!o[c]['location']){continue}\n        client.name = o[c]['clientMac'];\n        client.mac = o[c]['clientMac'];\n        client.lat = o[c]['location']['lat'];\n        client.lng = o[c]['location']['lng'];\n        client.unc = o[c]['location']['unc'];\n        client.seenString = o[c]['seenTime'];\n        client.seenEpoch = o[c]['seenEpoch'];\n        client.floors = map['data']['apFloors'] === null ? \"\" : map['data']['apFloors'].join;\n        client.manufacturer = o[c]['manufacturer'];\n        client.os = o[c]['os'];\n        client.ssid = o[c]['ssid'];\n        client.ap = map['data']['apMac'];\n        client.apTags = map['data']['apTags'];\n        client.type = map['type'] === \"BluetoothDevicesSeen\" ? \"Bluetooth\" : \"WiFi\";\n        msg.log = \"AP #{map['data']['apMac']} on #{map['data']['apFloors']}: #{c}\";\n        if (client.seenEpoch===null || client.seenEpoch === 0){continue}//  # This probe is useless, so ignore it\n        \n    }\n    msg.payload = client;\n    node.send(msg);\n   }\n\n   \nreturn msg;","outputs":1,"noerr":0,"x":646.765625,"y":78.75,"wires":[[]]},{"id":"4db87184.e5c73","type":"comment","z":"669f5cc3.759de4","name":"Filter","info":"","x":294.515625,"y":442.89453125,"wires":[]},{"id":"8604dd68.3fd1","type":"template","z":"669f5cc3.759de4","name":"JavaScript cluster","field":"payload.script","fieldType":"msg","format":"javascript","syntax":"plain","template":"\nvar map;\n        \n//marker clusterer\nvar mc;\nvar mcOptions = {gridSize: 20, maxZoom: 17, imagePath: \"https://cdn.rawgit.com/googlemaps/v3-utility-library/master/markerclustererplus/images/m\"};\n\n//global infowindow\nvar infowindow = new google.maps.InfoWindow();\n\n//geocoder\nvar geocoder = new google.maps.Geocoder(); \n\nvar address = new Array(\"42.3334,-89.1572\",\n\"39.2058,-76.7531\",\n\"39.7751,-86.1322\",\n\"40.4894,-78.3499\",\n\"42.0203,-87.9059\",\n\"36.2673,-86.2912\",\n\"33.6115,-84.3745\",\n\"44.9793,-93.273\",\n\"40.1461,-76.0738\",\n\"32.2911,-90.1927\",\n\"32.9315,-96.6158\",\n\"36.0553,-79.8317\",\n\"41.8397,-88.0887\",\n\"47.8029,-103.267\",\n\"34.106,-83.589\",\n\"41.5907,-87.3199\",\n\"43.0905,-74.3554\",\n\"40.3438,-74.4289\",\n\"40.8651,-96.8231\",\n\"40.8651,-96.8231\",\n\"41.759,-88.1524\",\n\"38.2512,-86.8675\",\n\"41.8119,-87.6873\",\n\"41.3651,-89.0866\",\n\"25.7791,-80.1978\",\n\"41.6404,-88.0696\",\n\"41.7684,-88.1366\",\n\"39.7299,-86.4234\",\n\"41.5234,-81.5996\",\n\"41.6233,-88.0225\",\n\"41.0171,-80.8029\",\n\"40.2899,-82.9811\",\n\"41.8119,-87.6873\",\n\"32.3445,-99.8021\",\n\"41.8119,-87.6873\",\n\"29.8131,-95.3098\",\n\"35.1693,-89.9904\",\n\"33.6115,-84.3745\",\n\"47.7374,-103.298\",\n\"46.3502,-94.1\",\n\"41.9907,-88.4298\",\n\"35.3716,-80.5621\",\n\"38.189,-85.6768\",\n\"41.8119,-87.6873\",\n\"32.7714,-97.2915\");\nvar content = new Array(\"UnitNo1\",\n\"UnitNo2\",\n\"UnitNo3\",\n\"UnitNo4\",\n\"UnitNo5\",\n\"UnitNo6\",\n\"UnitNo7\",\n\"UnitNo8\",\n\"UnitNo9\",\n\"UnitNo10\",\n\"UnitNo11\",\n\"UnitNo12\",\n\"UnitNo13\",\n\"UnitNo14\",\n\"UnitNo15\",\n\"UnitNo16\",\n\"UnitNo17\",\n\"UnitNo18\",\n\"UnitNo19\",\n\"UnitNo20\",\n\"UnitNo21\",\n\"UnitNo22\",\n\"UnitNo23\",\n\"UnitNo24\",\n\"UnitNo25\",\n\"UnitNo26\",\n\"UnitNo27\",\n\"UnitNo28\",\n\"UnitNo29\",\n\"UnitNo30\",\n\"UnitNo31\",\n\"UnitNo32\",\n\"UnitNo33\",\n\"UnitNo34\",\n\"UnitNo35\",\n\"UnitNo36\",\n\"UnitNo37\",\n\"UnitNo38\",\n\"UnitNo39\",\n\"UnitNo40\",\n\"UnitNo41\",\n\"UnitNo42\",\n\"UnitNo43\",\n\"UnitNo44\",\n\"UnitNo45\");\n\n        //min and max limits for multiplier, for random numbers\n        //keep the range pretty small, so markers are kept close by\n        var min = .999999;\n        var max = 1.000001;\n\nfunction createMarker(latlng,text) {\n  var marker = new google.maps.Marker({\n    position: latlng,\n    map: map\n  });\n\n  ///get array of markers currently in cluster\n  var allMarkers = mc.getMarkers();\n\n  //check to see if any of the existing markers match the latlng of the new marker\n  if (allMarkers.length !== 0) {\n    for (i=0; i < allMarkers.length; i++) {\n      var existingMarker = allMarkers[i];\n      var pos = existingMarker.getPosition();\n\n      if (latlng.equals(pos)) {\n        text = text + \" & \" + content[i];\n      }                   \n    }\n  }\n\n  google.maps.event.addListener(marker, 'click', function() {\n    infowindow.close();\n    infowindow.setContent(text);\n    infowindow.open(map,marker);\n  });\n  mc.addMarker(marker);\n  return marker;\n}\nfunction initialize(){\n    var options = { \n    zoom: 4, \n    center: new google.maps.LatLng(39.8282,-98.5795), \n    mapTypeId: google.maps.MapTypeId.ROADMAP \n    };\n    map = new google.maps.Map(document.getElementById('map'), options); \n    \n    //marker cluster\n    \n    var gmarkers = [];\n    mc = new MarkerClusterer(map, [], mcOptions);\n    for (i=0; i<address.length; i++) {\n       var ptStr = address[i];\n       var coords = ptStr.split(\",\");\n       var latlng = new google.maps.LatLng(parseFloat(coords[0]),parseFloat(coords[1]));\t\t\t    \n       gmarkers.push(createMarker(latlng,content[i]));\n    }\n\n}\n","x":338.265625,"y":777.75,"wires":[["2499ad1d.4c4af2"]]},{"id":"fca5d8ee.2fe2f8","type":"template","z":"669f5cc3.759de4","name":"JavaScript - c 1.0","field":"payload.script","fieldType":"msg","format":"javascript","syntax":"plain","template":"(function ($) {\n  var map,                                      // This is the Google map\n    clientMarker,                               // The current marker when we are following a single client\n    clientUncertaintyCircle,                    // The circle describing that client's location uncertainty\n    lastEvent,                                  // The last scheduled polling task\n    lastInfoWindowMac,                          // The last Mac displayed in a marker tooltip\n    allMarkers = [],                            // The markers when we are in \"View All\" mode\n    lastMac = \"\",                               // The last requested MAC to follow\n    infoWindow = new google.maps.InfoWindow();  // The marker tooltip\n    /*\n    ,\n    markerImage = new google.maps.MarkerImage('blue_circle.png',\n      new google.maps.Size(15, 15),\n      new google.maps.Point(0, 0),\n      new google.maps.Point(4.5, 4.5)\n    );\n    */\n    \n    var latlngbounds = new google.maps.LatLngBounds();\n\n    // Marker Cluster\n\n    mc = new MarkerClusterer(map, [], mcOptions);\n    var mcOptions = {gridSize: 20, maxZoom: 17, imagePath: \"https://cdn.rawgit.com/googlemaps/v3-utility-library/master/markerclustererplus/images/m\"};\n\n//marker cluster\n\nvar gmarkers = [];\nmc = new MarkerClusterer(map, [], mcOptions);\n\n\n\n  // Removes all markers\n  function clearAll() {\n    clientMarker.setMap(null);\n    clientUncertaintyCircle.setMap(null);\n    lastInfoWindowMac = \"\";\n    var m;\n    while (allMarkers.length !== 0) {\n      m = allMarkers.pop();\n      if (infoWindow.anchor === m) {\n        lastInfoWindowMac = m.mac;\n      }\n      m.setMap(null);\n    }\n  }\n\n  // Plots the location and uncertainty for a single MAC address\n  function track(client) {\n    clearAll();\n    if (client !== undefined && client.lat !== undefined && !(typeof client.lat === 'undefined')) {\n      var pos = new google.maps.LatLng(client.lat, client.lng);\n      console.log('track client pos '+pos);\n      if (client.manufacturer !== undefined) {\n        mfrStr = client.manufacturer + \" \";\n      } else {\n        mfrStr = \"\";\n      }\n      if (client.os !== undefined) {\n        osStr = \" running \" + client.os;\n      } else {\n        osStr = \"\";\n      }\n      if (client.ssid !== undefined) {\n        ssidStr = \" with SSID '\" + client.ssid + \"'\";\n      } else {\n        ssidStr = \"\";\n      }\n      if (client.floors !== undefined && client.floors !== \"\") {\n        floorStr = \" at '\" + client.floors + \"'\"\n      } else {\n        floorStr = \"\";\n      }\n      $('#last-mac').text(mfrStr + \"'\" + lastMac + \"'\" + osStr + ssidStr +\n        \" last seen on \" + client.seenString + floorStr +\n        \" with uncertainty \" + client.unc.toFixed(1) + \" meters (reloading every 20 seconds)\");\n      map.setCenter(pos);\n      clientMarker.setMap(map);\n      clientMarker.setPosition(pos);\n      clientUncertaintyCircle = new google.maps.Circle({\n        map: map,\n        center: pos,\n        radius: client.unc,\n        fillColor: 'RoyalBlue',\n        fillOpacity: 0.25,\n        strokeColor: 'RoyalBlue',\n        strokeWeight: 1\n      });\n    } else {\n      $('#last-mac').text(\"Client '\" + lastMac + \"' could not be found\");\n    }\n  }\n\n  // Looks up a single MAC address\n  function lookup(mac) {\n    $.getJSON('/clients/' + mac, function (response) {\n      track(response);\n    });\n  }\n\n  // Adds a marker for a single client within the \"view all\" perspective\n  function addMarker(client) {\n    var pos = new google.maps.LatLng(client.lat, client.lng);\n    console.log('addMarker pos '+pos);\n    var m = new google.maps.Marker({\n      position: pos,\n      map: map,\n      mac: client.mac,\n      //icon: markerImage\n    });\n    \n    //build info\n    var htmlString = '<h2>Client:  '+client.name +'</h2>';\n    \n    for (var key in client) {\n        if (client.hasOwnProperty(key)) {\n            if(client[key] !== undefined){\n                if(key == '_id' || key == 'name'){continue}\n                htmlString += '<p>'+key+' : '+client[key]+'</p>';\n            }\n        }\n    }\n    var content = (\"<div>\" + htmlString + \"</div>\" + \"(<a class='client-filter' href='#' data-mac='\" +\n        client.mac + \"'>Follow this client)</a>\");\n        \n        for (i=0; i<clients.length; i++) {\n       var ptStr = address[i];\n       var coords = ptStr.split(\",\");\n       var latlng = new google.maps.LatLng(client.lat,client.lng);\t\t\t    \n       gmarkers.push(createMarker(latlng,content[i]));\n    }\n    \n      //check to see if any of the existing markers match the latlng of the new marker\n      if (allMarkers.length !== 0) {\n        for (i=0; i < allMarkers.length; i++) {\n          \n          if (pos == allMarkers[i])  \n          {\n              content += \"<br>\"+client.name+\"<br>\"\n          }\n        }\n      }\n    //**********\n    \n    if(client.lat){\n        latlngbounds.extend(pos);\n        map.fitBounds(latlngbounds);\n    }\n    google.maps.event.addListener(m, 'click', function () {\n      infoWindow.setContent(content); \n      infoWindow.open(map, m);\n    });\n    if (client.mac === lastInfoWindowMac) {\n      infoWindow.open(map, m);\n    }\n    allMarkers.push(m);\n  }\n  \n\n    function createMarker(latlng,text,client) {\n      var marker = new google.maps.Marker({\n        position: latlng,\n        map: map\n      });\n      \n        google.maps.event.addListener(marker, 'click', function() {\n        infowindow.close();\n        infowindow.setContent(text);\n        infowindow.open(map,marker);\n        });\n        mc.addMarker(marker);\n        return marker;\n    }\n\n  //check to see if any of the existing markers match the latlng of the new marker\n  if (allMarkers.length !== 0) {\n    for (i=0; i < allMarkers.length; i++) {\n      var existingMarker = allMarkers[i];\n      var pos = existingMarker.getPosition();\n\n      if (latlng.equals(pos)) {\n        text = text + \" & \" + client.name;\n      }                   \n    }\n  }\n    \n\n  // Displays markers for all clients\n  function trackAll(clients) {\n    clearAll();\n    if (clients.length === 0) {\n      $('#last-mac').text(\"Found no clients (if you just started the web server, you may need to wait a few minutes to receive pushes from Meraki)\");\n    } else { $('#last-mac').text(\"Found \" + clients.length + \" clients (reloading every 20 seconds)\"); }\n    clientUncertaintyCircle.setMap(null);\n    //clients.forEach(addMarker);\n    \n    for (i=0; i<clients.length; i++) {\n       var latlng = new google.maps.LatLng(clients[i].lat,clients[i].lng);\t\t\t    \n       gmarkers.push(createMarker(latlng,\"<br>\",clients[i]));\n    }\n  }\n\n  // Looks up all MAC addresses\n  function lookupAll() {\n    $('#last-mac').text(\"Looking up all clients...\");\n    $.getJSON('/clients/', function (response) {\n      trackAll(response);\n    });\n  }\n\n  // Begins a task timer to reload a single MAC every 20 seconds\n  function startLookup() {\n    lastMac = $('#mac-field').val().trim();\n    if (lastEvent !== null) { window.clearInterval(lastEvent); }\n    lookup(lastMac);\n    lastEvent = window.setInterval(lookup, 20000, lastMac);\n  }\n\n  // Begins a task timer to reload all MACs every 20 seconds\n  function startLookupAll() {\n    if (lastEvent !== null) { window.clearInterval(lastEvent); }\n    lastEvent = window.setInterval(lookupAll, 20000);\n    lookupAll();\n  }\n\n  // This is called after the DOM is loaded, so we can safely bind all the\n  // listeners here.\n  function initialize() {\n    var center = new google.maps.LatLng(37.7705, -122.3870);\n    var mapOptions = {\n      zoom: 20,\n      center: center\n    };\n    map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);\n    clientMarker = new google.maps.Marker({\n      position: center,\n      map: null,\n      //icon: markerImage\n    });\n    clientUncertaintyCircle = new google.maps.Circle({\n      position: center,\n      map: null\n    });\n\n    $('#track').click(startLookup).bind(\"enterKey\", startLookup);\n\n    $('#all').click(startLookupAll);\n\n    $(document).on(\"click\", \".client-filter\", function (e) {\n      e.preventDefault();\n      var mac = $(this).data('mac');\n      $('#mac-field').val(mac);\n      startLookup();\n    });\n\n    startLookupAll();\n  }\n\n  // Call the initialize function when the window loads\n  $(window).load(initialize);\n}(jQuery));","x":335,"y":817,"wires":[["2499ad1d.4c4af2"]]},{"id":"d17c54cf.08f518","type":"template","z":"669f5cc3.759de4","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<html>\n  <head>\n    <title>CMX push API demo app with Node-RED</title>\n    <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n    <meta charset=\"utf-8\">\n    <script>TypekitConfig={kitId:\"hum1oye\"